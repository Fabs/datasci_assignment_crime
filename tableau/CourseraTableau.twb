<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.1106.2334                                -->
<workbook source-platform='mac' version='9.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='CourseraTableau' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='localhost' inline='true' name='mysql.42344.421401261578' version='9.1'>
      <connection class='mysql' dbname='crime' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root'>
        <relation name='san_francisco' table='[san_francisco]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncidntNum</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IncidntNum]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>IncidntNum</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Descript</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Descript]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>Descript</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayOfWeek</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DayOfWeek]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>DayOfWeek</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PdDistrict</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PdDistrict]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>PdDistrict</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resolution</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Resolution]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>Resolution</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>130</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PdId</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PdId]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>PdId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wk_count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[wk_count]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>wk_count</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wkend_count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[wkend_count]</local-name>
            <parent-name>[san_francisco]</parent-name>
            <remote-alias>wkend_count</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315177291781:qk]&quot;' value='Week' />
          <alias key='&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315177320454:qk]&quot;' value='Weekend' />
          <alias key='&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178471438:qk]&quot;' value='% Weekend' />
          <alias key='&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178557455:qk]&quot;' value='% Week' />
        </aliases>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FORGERY/COUNTERFEITING&quot;' value='FORGERY COUNTERFEITING' />
        </aliases>
      </column>
      <column caption='Day Of Week' datatype='string' name='[DayOfWeek]' role='dimension' type='nominal' />
      <column caption='Incidnt Num' datatype='string' name='[IncidntNum]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Pd District' datatype='string' name='[PdDistrict]' role='dimension' type='nominal' />
      <column caption='Pd Id' datatype='string' name='[PdId]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Week Events' datatype='integer' name='[wk_count]' role='measure' type='quantitative' />
      <column caption='Weekend Events' datatype='integer' name='[wkend_count]' role='measure' type='quantitative' />
      <column-instance column='[wk_count]' derivation='Sum' name='[sum:wk_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wkend_count]' derivation='Sum' name='[sum:wkend_count:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/fabs/Documents/My Tableau Repository/Datasources/crime.tde' schema='Extract' tablename='Extract' update-time='12/06/2015 01:36:08 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='28993' timestamp-start='2015-12-06 13:36:08.576' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Address</remote-alias>
              <ordinal>0</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7350</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; BOOKED\&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZOE ST / BRYANT ST&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>1</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ARSON&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEAPON LAWS&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>2</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>92</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;06/01/2014&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;08/31/2014&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DayOfWeek</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DayOfWeek]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DayOfWeek</remote-alias>
              <ordinal>3</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Friday&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wednesday&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Sunday&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Descript</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Descript]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Descript</remote-alias>
              <ordinal>4</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>368</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABANDONMENT OF CHILD&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WILLFUL CRUELTY TO CHILD&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IncidntNum</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IncidntNum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>IncidntNum</remote-alias>
              <ordinal>5</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23008</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;010284385&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;990367398&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>6</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PdDistrict</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PdDistrict]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PdDistrict</remote-alias>
              <ordinal>7</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BAYVIEW&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;TENDERLOIN&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PdId</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PdId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PdId</remote-alias>
              <ordinal>8</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23429</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; -122.365565425353)\&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99036739868020&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Resolution</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Resolution]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Resolution</remote-alias>
              <ordinal>9</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\&quot;ARREST&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;UNFOUNDED&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Time</remote-alias>
              <ordinal>10</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1379</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00:01&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;23:59&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>X</remote-name>
              <remote-type>129</remote-type>
              <local-name>[X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>X</remote-alias>
              <ordinal>11</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10149</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-122.365565425353&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WOODSIDE AV / PORTOLA DR&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Y</remote-alias>
              <ordinal>12</ordinal>
              <family>san_francisco</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10264</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-122.365565425353&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;37.8173145665528&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>2</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>13</ordinal>
              <family>san_francisco</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28993</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>420311521.0</statistic>
                <statistic aggregation='Avg' datatype='real'>14497.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>28993</statistic>
                <statistic aggregation='Stdev' datatype='real'>8369.7025129027661</statistic>
                <statistic aggregation='StdevP' datatype='real'>8369.5581716016914</statistic>
                <statistic aggregation='Var' datatype='real'>70051920.154490888</statistic>
                <statistic aggregation='VarP' datatype='real'>70049503.987824649</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
                <statistic aggregation='Median' datatype='integer'>14497</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8124201389056.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wk_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[wk_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wk_count</remote-alias>
              <ordinal>14</ordinal>
              <family>san_francisco</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wkend_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[wkend_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wkend_count</remote-alias>
              <ordinal>15</ordinal>
              <family>san_francisco</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>28993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[mysql.42344.421401261578].[none:Calculation_2332231315177967626:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[mysql.42344.421401261578].[sum:wk_count:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315177291781:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315177771015:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315177807880:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178061835:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178381325:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178557455:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[mysql.42344.421401261578].[sum:wkend_count:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315177320454:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315177848841:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178172428:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178471438:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Equally'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='mysql.42344.421401261578' />
          </datasources>
          <datasource-dependencies datasource='mysql.42344.421401261578'>
            <column caption='SUM([Weekend Events]/2)/(SUM([Week Events])/5+SUM([Weekend Ev...' datatype='real' name='[Calculation_2332231315178471438]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM([wkend_count]/2)/(SUM([wk_count])/5+SUM([wkend_count])/2)' />
            </column>
            <column caption='SUM([Week Events]/5)/(SUM([Week Events]/5)+SUM([Weekend Event...' datatype='real' name='[Calculation_2332231315178557455]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM([wk_count]/5)/(SUM([wk_count]/5)+SUM([wkend_count]/2))' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FORGERY/COUNTERFEITING&quot;' value='FORGERY COUNTERFEITING' />
              </aliases>
            </column>
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2332231315178471438]' derivation='User' name='[usr:Calculation_2332231315178471438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2332231315178557455]' derivation='User' name='[usr:Calculation_2332231315178557455:qk]' pivot='key' type='quantitative' />
            <column caption='Week Events' datatype='integer' name='[wk_count]' role='measure' type='quantitative' />
            <column caption='Weekend Events' datatype='integer' name='[wkend_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.42344.421401261578].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178557455:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178471438:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[mysql.42344.421401261578].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;ARSON&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;ASSAULT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;BRIBERY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;BURGLARY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;DISORDERLY CONDUCT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;DRIVING UNDER THE INFLUENCE&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;DRUG/NARCOTIC&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;DRUNKENNESS&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;EMBEZZLEMENT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;FAMILY OFFENSES&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;FORGERY/COUNTERFEITING&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;GAMBLING&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;KIDNAPPING&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;LARCENY/THEFT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;LIQUOR LAWS&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;LOITERING&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;NON-CRIMINAL&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;PORNOGRAPHY/OBSCENE MAT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;PROSTITUTION&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;RUNAWAY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;SECONDARY CODES&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;STOLEN PROPERTY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;SUICIDE&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;SUSPICIOUS OCC&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;TRESPASS&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;VANDALISM&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.42344.421401261578].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EXTORTION&quot;</bucket>
              <bucket>&quot;ROBBERY&quot;</bucket>
              <bucket>&quot;FRAUD&quot;</bucket>
              <bucket>&quot;MISSING PERSON&quot;</bucket>
              <bucket>&quot;OTHER OFFENSES&quot;</bucket>
              <bucket>&quot;WARRANTS&quot;</bucket>
              <bucket>&quot;WEAPON LAWS&quot;</bucket>
              <bucket>&quot;VEHICLE THEFT&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.42344.421401261578].[:Measure Names]</column>
            <column>[mysql.42344.421401261578].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.42344.421401261578].[:Measure Names]' value='34' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[mysql.42344.421401261578].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='68' />
                <format attr='maxwidth' value='68' />
                <format attr='minheight' value='288' />
                <format attr='maxheight' value='288' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.42344.421401261578].[Multiple Values]</rows>
        <cols>([mysql.42344.421401261578].[none:Category:nk] / [mysql.42344.421401261578].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='mysql.42344.421401261578' />
          </datasources>
          <datasource-dependencies datasource='mysql.42344.421401261578' />
          <filter class='categorical' column='[mysql.42344.421401261578].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[mysql.42344.421401261578].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Week'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='mysql.42344.421401261578' />
          </datasources>
          <datasource-dependencies datasource='mysql.42344.421401261578'>
            <column caption='SUM([Weekend Events]/2)/(SUM([Week Events])/5+SUM([Weekend Ev...' datatype='real' name='[Calculation_2332231315178471438]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM([wkend_count]/2)/(SUM([wk_count])/5+SUM([wkend_count])/2)' />
            </column>
            <column caption='SUM([Week Events]/5)/(SUM([Week Events]/5)+SUM([Weekend Event...' datatype='real' name='[Calculation_2332231315178557455]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM([wk_count]/5)/(SUM([wk_count]/5)+SUM([wkend_count]/2))' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FORGERY/COUNTERFEITING&quot;' value='FORGERY COUNTERFEITING' />
              </aliases>
            </column>
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2332231315178471438]' derivation='User' name='[usr:Calculation_2332231315178471438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2332231315178557455]' derivation='User' name='[usr:Calculation_2332231315178557455:qk]' pivot='key' type='quantitative' />
            <column caption='Week Events' datatype='integer' name='[wk_count]' role='measure' type='quantitative' />
            <column caption='Weekend Events' datatype='integer' name='[wkend_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.42344.421401261578].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178557455:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178471438:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[mysql.42344.421401261578].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;ARSON&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;ASSAULT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;DISORDERLY CONDUCT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;DRIVING UNDER THE INFLUENCE&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;DRUNKENNESS&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;EMBEZZLEMENT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;EXTORTION&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;FORGERY/COUNTERFEITING&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;FRAUD&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;KIDNAPPING&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;LARCENY/THEFT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;LIQUOR LAWS&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;MISSING PERSON&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;NON-CRIMINAL&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;OTHER OFFENSES&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;ROBBERY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;RUNAWAY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;SECONDARY CODES&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;STOLEN PROPERTY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;SUICIDE&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;SUSPICIOUS OCC&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;TRESPASS&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;VANDALISM&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;VEHICLE THEFT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;WARRANTS&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;WEAPON LAWS&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.42344.421401261578].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;BRIBERY&quot;</bucket>
              <bucket>&quot;FAMILY OFFENSES&quot;</bucket>
              <bucket>&quot;GAMBLING&quot;</bucket>
              <bucket>&quot;LOITERING&quot;</bucket>
              <bucket>&quot;PORNOGRAPHY/OBSCENE MAT&quot;</bucket>
              <bucket>&quot;PROSTITUTION&quot;</bucket>
              <bucket>&quot;BURGLARY&quot;</bucket>
              <bucket>&quot;DRUG/NARCOTIC&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.42344.421401261578].[:Measure Names]</column>
            <column>[mysql.42344.421401261578].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.42344.421401261578].[:Measure Names]' value='34' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[mysql.42344.421401261578].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='68' />
                <format attr='maxwidth' value='68' />
                <format attr='minheight' value='289' />
                <format attr='maxheight' value='289' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.42344.421401261578].[Multiple Values]</rows>
        <cols>([mysql.42344.421401261578].[none:Category:nk] / [mysql.42344.421401261578].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Weekend'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='mysql.42344.421401261578' />
          </datasources>
          <datasource-dependencies datasource='mysql.42344.421401261578'>
            <column caption='ln(SUM([Week Events]))' datatype='real' name='[Calculation_2332231315177291781]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='ln(SUM([wk_count]))' />
            </column>
            <column caption='SUM([Weekend Events]/2)/(SUM([Week Events])/5+SUM([Weekend Ev...' datatype='real' name='[Calculation_2332231315178471438]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM([wkend_count]/2)/(SUM([wk_count])/5+SUM([wkend_count])/2)' />
            </column>
            <column caption='SUM([Week Events]/5)/(SUM([Week Events]/5)+SUM([Weekend Event...' datatype='real' name='[Calculation_2332231315178557455]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM([wk_count]/5)/(SUM([wk_count]/5)+SUM([wkend_count]/2))' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FORGERY/COUNTERFEITING&quot;' value='FORGERY COUNTERFEITING' />
              </aliases>
            </column>
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[wkend_count]' derivation='Sum' name='[sum:wkend_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2332231315177291781]' derivation='User' name='[usr:Calculation_2332231315177291781:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2332231315178471438]' derivation='User' name='[usr:Calculation_2332231315178471438:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2332231315178557455]' derivation='User' name='[usr:Calculation_2332231315178557455:qk]' pivot='key' type='quantitative' />
            <column caption='Week Events' datatype='integer' name='[wk_count]' role='measure' type='quantitative' />
            <column caption='Weekend Events' datatype='integer' name='[wkend_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.42344.421401261578].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178557455:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315178471438:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.42344.421401261578].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.42344.421401261578].[usr:Calculation_2332231315177291781:qk]&quot;</bucket>
              <bucket>&quot;[mysql.42344.421401261578].[sum:wkend_count:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[mysql.42344.421401261578].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;BRIBERY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;BURGLARY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;DISORDERLY CONDUCT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;DRUG/NARCOTIC&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;EXTORTION&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;FAMILY OFFENSES&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;FORGERY/COUNTERFEITING&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;FRAUD&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;GAMBLING&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;LOITERING&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;MISSING PERSON&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;NON-CRIMINAL&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;OTHER OFFENSES&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;PORNOGRAPHY/OBSCENE MAT&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;PROSTITUTION&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;ROBBERY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;STOLEN PROPERTY&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;SUSPICIOUS OCC&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;TRESPASS&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;VANDALISM&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;WARRANTS&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;WEAPON LAWS&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.42344.421401261578].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;DRIVING UNDER THE INFLUENCE&quot;</bucket>
              <bucket>&quot;RUNAWAY&quot;</bucket>
              <bucket>&quot;SUICIDE&quot;</bucket>
              <bucket>&quot;ARSON&quot;</bucket>
              <bucket>&quot;DRUNKENNESS&quot;</bucket>
              <bucket>&quot;LIQUOR LAWS&quot;</bucket>
              <bucket>&quot;LARCENY/THEFT&quot;</bucket>
              <bucket>&quot;ASSAULT&quot;</bucket>
              <bucket>&quot;KIDNAPPING&quot;</bucket>
              <bucket>&quot;VEHICLE THEFT&quot;</bucket>
              <bucket>&quot;EMBEZZLEMENT&quot;</bucket>
              <bucket>&quot;SECONDARY CODES&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.42344.421401261578].[:Measure Names]</column>
            <column>[mysql.42344.421401261578].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.42344.421401261578].[:Measure Names]' value='26' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[mysql.42344.421401261578].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='291' />
                <format attr='maxheight' value='291' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.42344.421401261578].[Multiple Values]</rows>
        <cols>([mysql.42344.421401261578].[none:Category:nk] / [mysql.42344.421401261578].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Story Title</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' hidden='true' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' hidden='true' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' hidden='true' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
            <zone h='83817' hidden='true' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
              <flipboard active-id='1' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='This is important' captured-sheet='Week' id='1'>
                    <currentDeltas>
                      <worksheet name='Week'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[mysql.42344.421401261578].[Multiple Values]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                  <story-point captured-sheet='' id='2' />
                  <story-point captured-sheet='' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows film-mode='true'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Story 1'>
      <zones />
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Week'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[mysql.42344.421401261578].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.42344.421401261578].[:Measure Names]</field>
          <field>[mysql.42344.421401261578].[none:Calculation_2332231315172003841:qk]</field>
          <field>[mysql.42344.421401261578].[none:Calculation_2332231315177967626:qk]</field>
          <field>[mysql.42344.421401261578].[none:Category:nk]</field>
          <field>[mysql.42344.421401261578].[none:DayOfWeek:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Equally'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[mysql.42344.421401261578].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.42344.421401261578].[:Measure Names]</field>
          <field>[mysql.42344.421401261578].[none:Calculation_2332231315172003841:qk]</field>
          <field>[mysql.42344.421401261578].[none:Calculation_2332231315177967626:qk]</field>
          <field>[mysql.42344.421401261578].[none:Category:nk]</field>
          <field>[mysql.42344.421401261578].[none:DayOfWeek:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Weekend'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[mysql.42344.421401261578].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.42344.421401261578].[:Measure Names]</field>
          <field>[mysql.42344.421401261578].[none:Calculation_2332231315172003841:qk]</field>
          <field>[mysql.42344.421401261578].[none:Calculation_2332231315177967626:qk]</field>
          <field>[mysql.42344.421401261578].[none:Category:nk]</field>
          <field>[mysql.42344.421401261578].[none:DayOfWeek:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Story 1' width='384'>
      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
      B+9OdmnPqJauLFy0NL/6zW8ybtzItPTrlyTp7FibG37+o/yhY0BOO/Ul6enadIqo0dJIGi2b
      l1mzrmM77zzsHPrNmzdvXl8Pgp3L1r6p2Wgk7SPHZMzIEUmjkRl7zkhLkolTpmVI65DM3ntq
      Lv3u5Tn6xJMze69pf1orsw48OAtuuz73L1+XN73xlLQNGZw0Guk/sDVTJ0/K5GkzMrBfy+a/
      Qwf0y9W/vCOPrliVd77r9Bx11KG5fP630jZ677zyxLlp6dcve+wxNYMaXekcsEuajy/PQ8vW
      Zf/Ze2afvffK6ElTMmyXARk2fLeMHzEki1euy9TJE3bIe9Xe3p6ODoF5tlpbW71f26C1tfUv
      Wr/RbLoExrbp60dBLL7rV7nxDxtyygnP69NxPBseBbFtPApi2/ylj4JwEZidzsRZc3LKrL4e
      Bez8XAMAKEoAAIoSAICiBACgKAEAKEoAAIoSAICiBACgKAEAKEoAAIoSAICiBACgKAEAKEoA
      AIoSAICiBACgKAEAKEoAAIoSAICiBACgKAEAKEoAAIpqNJvNZl8PAoC/PkcAAEUJAEBRAgBQ
      lAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJ
      AEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAA
      FCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBR
      AgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUA
      AEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQ
      lAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJ
      AEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAA
      FCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBR
      AgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUA
      AEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQ
      lAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJ
      AEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAA
      FCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBR
      AgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUA
      AEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQ
      lAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJ
      AEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAA
      FCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBR
      AgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUA
      AEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQ
      lAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJ
      AEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEX9D2Ceg6uqCKBm
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Week' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdd3gVVf7H8ffcXpLc9EognRoIvTcRKypiRyxrW7uuu+radl1dV13b7rrF
      nw3EhgpYkC4loQRIKKGEUENNIL3dm9w28/vjhlDtJcj9vp6H5+Hmzpw5M5nMZ+bMnDOKpmka
      Qgghgo6uvSsghBCifUgACCFEkJIAEEKIICUBIIQQQUoCQAghgpQEgBBCBCkJACGECFISAEII
      EaQkAIQQIkhJAAghRJCSABBCiCAlASCEEEHK0N4VEEKIb6SpHDqwm3XrNnK4up7QqFj69R9I
      p8RolK+dR6Oxqhwc8YSa5Dz368iWEUKcxjR2rVvK357+OyuKdqLoYOuaJTzz7AsU76v+hrm8
      vPHcU+xr8P6Cdf31kSsAIcRpy9NUw/TpM4jvdw733XAJdrORlobDvPLssyxdsYEuyWOoObCT
      jSW7aPGqRMR2YECfHuzfuYl91XVsLMinw1kjMDZXsXrNOlw+jU6Z3eme2REFlbLS7Wws2Y0p
      xEGkzUBYYiZpCZE0VO5n7YZiXF6VlM696JaWQMOhUnZVNNF4qAyvLRyLXqNX3wGEmvW0NNWw
      actuuub0JsSsb+/N9p3pn3zyySfbuxJCCHEqNeW7mD5rNZdNuoHUuDAADGY7fQYMomfXVJoP
      beOvz/6TWg94Gg8ze8ZMDEk5UFvCqjVb0FtDSUtP5L8vPEvx/npUdy2zZ32JKSELu7OU5196
      lVqPwsHtG/hi9lyI6kpGSBPPPvM8pTVufA2HmDFjOmHJPfGX5vP8f99hf2U9FXVONnw1C0ty
      DumJ4Wxe9hlTZ69n1OhhWAxf2zB12pErACHEaUvTvKA3YrdZj/mpgj0sAoDyMpVB51zMeWNH
      4mmspGn/NqoO1TLuknHM+2A6F078Da71MyitNPLIX24l0qyR+8HrLJqXR0tcJfZOw/jDA9eh
      d1Xw/FNPoWmwoXAZzvAMnvz9vYRb9Hz5zit8Pv8rbuljA1tHHnvyCUL1fma8WcWK1YWc1TOG
      ZflF9BpyEWHmX1erugSAEOK0pdOZ0KleWprdx/18/84iDrssZMQ7qNw2nQdmfYw51EHz4QZG
      DGydSAEFDVdjE25XOa+98jw6wO/1YI82setQI/FdBmEz6CEshk4RIXiBhpoqYqITCbGa0emg
      c2oqX+48CJqVsA6diLZbUNAYMXIoi/89m007OrPtoIvbb8j++pvSpykJACHEaSs8OonUeCOL
      l+TRM+MyTDrwNdcy7e238HUcRV1CFcW1Rh575gUSIqy89cyDRx9t0cDjVdEbDYQmduNPTz+I
      3aBRunE1O6sVfHuWU7D3AG4/6D31HKhzEgfYwh3U76/H51MxmXQcqDiE0WoCQNFoPcgrxKX1
      JsUxnWnvvY+tQw5ZHcLaZyP9CHIPQAhx2tIZLMSHG/j8kw8o3LKLwwf3MHPau2yv0fjNzdej
      VZeyumgXIVYTa5d+Se6GXUQmpTEoJ50ln85ga3k92YOHsjH3CzaWlFNTvpOPp3+KtVMOY4Z2
      Ze7Mj9m8Yy/5S+axYWcZqb2GMjq7Iws+m05JWRUHtq9l+uw8zr90ElH+wxQc8DBuVL9A3Yxm
      1Or9LMgvZtyVV9G9U1w7b63vTwJACHH6UhQiEtIY1L8X3uYmnM1uEtN7cvOtt5IWF05iSibh
      Rh8V1XVEJHfj0nNHYnM4SEvuQEJSHF7VR3qPQVw4eiCN1YdxeqD/mHGMHzsYvWIgK6sLRnyk
      dOmJ+/A+0voPp3eP7gzu152aisO0+IycM+E6xg7qgkGvEBodT2anhEDVAIOukfxNh5k46SrC
      fkVP/xyhaJqmtXclhBDil7Z23hRe+2wLV0+aQPP+TcxctJ57H/sLOamx3zqv6veyOm8hi+fM
      x5Q9lgevH/cL1PinJ/cAhBBBKXvEBC5vNlO4bAl6Wzg33H4f2SnffvAHQNOoObyfsIy+XHHR
      mJ+3oj8juQIQQogg9et6aFUIIcRP5owLAFVVUVW1vavR7lRVxefztXc1Tgsej4dgv9DVNA2v
      V8bFAfD5fHKMIHCMOOMCoLm5Gbfb/e0TnuEaGxuprKxs72qcFkpLS9u7Cu1OVVX27NnT3tU4
      LRw+fBin09ne1Wh3zc3NZ14ACCGE+G4kAIQQIkjJY6BCiKCkaSoet4ejd4cUDEYjBv2x58Ua
      rqYmXC1u9AYzDkcoutYBf1S/D7fHh6Kcan4Nj9uDqoHJbEKnKGiqH7fHg95gwmjQt9XB1dRE
      s9uDwWTBERpyTHkBXncLjU1ONHSEhIViNgYO236/D6/32Pt8p6o/+H1ePF4/eqMRk+H4zmoS
      AEKIoOSuP8yb//caZfVHbo4rmO0RXHjpVfTpmoyvuYE5n37EqqJtNDqbMZisdM4ewJWXX0R0
      mJX9RYt57ZOlxwWA2RbKqPMmMKx3Bz588//YdtDJVbfcSq+0OJrKivnHG9PoMfQqxp/TE09T
      LZ9+9D7rtu7G2ezGaLaT3XcoEy45l4gQC6rfy8bVS/hy3lIqahtQ0RERm8T5F09gYM9MStYu
      5cNPF6G2VUDBaLJxzmUTGZqdCoCm+cn7bBoL1m6lY/Yobpt4DsdGgDQBCSGCkubzcXD/Hg6U
      VWEPc2DU+dm+pZDX33qPWqeLudPeYNoXC6lzK/Tq05cIk5+l86bz9/+9R4tfw93UwM6dO2lq
      0YiIiMBi0rG7pIh333ufQ/XNVB7Yx86dG/nw409paPHhd7vZU7qbyjonaD5mTP4XM+fn4dIs
      9OrTmxClmflffMir78zEo2rs2pDLv157h20Ha0nt3IOM5Gj2bCvitdfeYn9VE+6GWnbv3EmT
      T48jMhybNbD8//vX6zT4A+vocdayJPcrdu3ayZq8Beyrbj5uG8gVgBAiqMV16sb9D96P2VfH
      C488xrrKSmoO7mDB8iLM0Rk8/NjDpMQ48LhqefXZJygsWsba7eOJAUDPiAsv5/IxffG563nl
      r39hbVk9DU0tbeXv2rCcRauGMCq59QcqNB/exoKVWwlN6sHjf3qQeIeFpppyXnnuKbauyWXT
      mOGsmLuAZs3Gb267nzEDslD8Xr76/D2K9rrweDxt5Q8bdz1XjshEU5t58aE7WXuwnNoWP2F2
      Hfu3rGH7YTeRUVFU15SRv66Y1LF92+aVABBCBLWmunJW5i3FeXg3u6tqMYem01R5CJfbTed+
      PUiODkNRwGwLZ0S/3qzesYjK8hpiDAB+8pfMpnpnAQ21h9lUeoiYlBxiImwAWOx2jF4Ps6Z/
      RNZvzmlbZsXePbhVlYF9ehPvCLzsJiQiniHZXdm4bz2VBw5RW11FVFwK/Xtn4nPVs7V4G2FJ
      3RieBBajjqbWslbP+4TarZE0VB1mU5kTR3wfYq16VJ+b3Lw89LYwrrzhJmb85yXWLMlj3Kje
      hBkDjT8SAEKIoFZdXsob//svGuCIiueyyycQ42gIvFBGr9DWyK+AXjm+1VxRoKm2kvUHdlLj
      aiGqU2/uu+MmomxGACKSMzm7axQffvYVH35pxuMP3HI+UoyiO+aO7zHla5qGpqkoKCiKQn1Z
      Kf/3zxep9gSmP//GP9Ir8IoCGhsqWbt6K3VNbmLTe/Dg727HqoPGqr2sWV+KOSKdMCPEJoSz
      dX8xm7aXM7R7EiABIIQIcolpPbn7jhuxGBQs1hAiw8Nwlm1CbzBQun0XDS4vkXYjmuqlYNNm
      dDod9vAQaAJN0zN63DUMTTXxwov/pqpyP3sP15MRbwFA1RQGnTOeTUWb2LBlc9syHVFRKIrC
      9i3bcPkuxGZQ8LU0sm7bjsALbGIicTgi2L7vACW7yumb0pmHn3qOHRuW8faHszm2Y/vIS29i
      ZLKb5559idqDpeyvcNEpJoz1eYup9WlQuZNXXv4Hfp8Hv6qQu6yAQa0BIDeBhRBBzWQOIbFD
      BzokJREd6UCnUwhJ7MyALsnU7tvE31/8Bwu+Wsgbr/ydvE37iEzqyoDshLb5DUYTHTr34Yar
      zkfnqmTGh+9TVn/0HoDBHs3EKyZgNx59/iasUw5902Oo3FnAcy++ysKvFvC/V16iYFs5Sek9
      yemeyphRw9C7apn8nxf5fMFSNq0vYM7ifPxwzJM/YDSY6ZDVlxuvGoevxcnkt96kpqmJ5csK
      MFujuOMPj/Dggw/yh/vvJiXWzo6NK9lT6QrU7effvEIIcRpqO4bqOXGkKEVnZtLt96GfPJlF
      qwp5c0sBABnZA/jNLbfgMOo4rOhobSdCUXT0GnEhIzduYcHqYj6fn48K6JTAYjr1Hs4FQ1Yy
      fWkRmkFB0Vv47QMPY379DZatXUbJuuUoOh1d+43gNzfeQIhRT/dhF/CbumY+nbOIj9+bAoA5
      NJLh513KuKGdOVCwEw3Q6RRAoc/Zl3FWQSGLNm3hrddfY2NZAxlDLmFk/97oFNA0H+VbCpm6
      YC3rtmzngv6ZZ95w0E6nE51Oh9Vqbe+qtKv6+npcLhcJCQnfPvEZbtu2bWRlZaGc2MMmiPj9
      fnbv3k1mZmZ7V6XdHTx4kLCwMELstsCYQDojdpv1pA5YEOhEVV9Xi9PVgsFsIyIiHIspcN7s
      87pxutxYrDbMrT/zuptxtXgwGEwomh9VUbDZbOgUBa+7heYWN0aLDYvZiELgBfW1tTU0t3gw
      WuxERDjaOnoBaKqKy9lEQ2MTmqLDHhJCiM2GXq/D63HT3NyC2RaCufXqwtPSTLPbg06noKoa
      RrMFm8XcVp7X3YKrxY3JYkX1eeUKQAgRnBSdnpDQb36Ru95gJDI6lshTfGcwmnE4zMf9zGi2
      4jCf+uTTaLZgNFuOL99oIjo2/hvqqMMeGob9FPU0mswYTccv32SxYrJ8/cmv0WzB0VoHp88r
      9wCEECJYSQAIIUSQkiYgcRzV76O2pgafesytIU3DFhpBqD1wuelzN1Nd24DebCMqPARFUdA0
      jfrqKtx+FYPJRmREKGh+6mtqcPtUjEYrERF26qpr8ClGIiMcuJ1N+BQdIfZAG2mgAj4qK6rw
      6wxEx0RhUBQ0TaWhtpoWn4bDEYnFLLut+PFO3NcVRY8txI7NakGHSk11DX7FRFRkGDpFwdfi
      oqqugZCwCLyuerx+CIuIwmLSg6bR1FBPU4sbe1g4doPK9pJdRCWnEhNux+/3UllexqGqGozm
      MNLSO2IxGlAAl7OBRufRp4Z0OgOhYaGYTcbWvy0VV2Md+/YdxKsqxCd1JDoytO1vRlNVqg8f
      4EB5NQZrCOnpqYH7FJpKXXU1Hv/xL7/R6QyERwYateQvSRzHXVfOS395lB2H3cfdFDv7+oe5
      bVygC/mKL9/nf9Pmo4/oymv/+TOhRj2az8PbLz5M/u4mwuP78I9XHkbfWMFLTz1CSZmL5My+
      /PmPN/DCs0/SYEnmqUfu4B+PP8YefQf++fRDRNgDHWfQ3Lz+8lMU7a3h2nv+wiXDsqgv38Gj
      j/0JlzGRR598iqzE0HbYMuJM01J7kBeefJxdFUf3dcVgY/zE27ni3CyeffRhDju68tozD2Az
      6anelsc9z0zhipseQd06nRkrdzJ6wi3cfvUY3PXlvPDUn9lerXDXHx+ni7GaV1/8J9c8/BQW
      bzWv/ftfFBbvRdHrUVUVR0wnbrnnPgZ0TmLRjLd5d3Z+YPmtJ1OW8CTu+t0fGNglkc0rZvGP
      1z+myeNHQUPTW7n46lu56sIh6LxNfPLma3y2rBANJVB2XCp3/+FBesRbefPvD7Gm1Hnc37LB
      kcjjTz5Np3CdBIA4UeCxtsi4FC66aAxGAE0jpWtHADRvE8uWr0ZVFNS6EnKLDnBh306gKCg6
      PRgUXI272X3ISZRrP3vLXYEy0aFwtEclSuDso/VBuqP0dn576/Xc/8QrfDrtHQb3fJyFn7xP
      VbORi6+6Vg7+4iejoENRdETGp3HRuDF46sqYM3chs774jFGD7sEA6JWj+6eiBA6Xer2JC6+7
      iTVbH2flgk8ZNiSH6tWzKD7QwODzr2Vgl44U5xXgDEmgY0won7z9Emu2HqBr/9GcP3oAh7et
      Y+bcxfzjxRf5579ewICCojMw+uKr6ZwQStX+HXz25UJmzltO37TzmD1/KT6zg+t+cz3R+hqm
      vvcJc2fPYfTQ3uxa+iGf5a4hucsALhk3koMbVzBj/kreencGLz14HYpiwGqP4rKrxmNpbfA3
      mGwkRVpA9UgAiFOzhkbSu99A7PrApXFIaAgA+zcXsONwIxlde7Fv+yaWLPyKC/redHRGFbwu
      F9u37ySxbh0tegX993zQOCpjIBPP7cfkuWt5+cWXKdtaQseeQxk/ps9PuIZCBIRFxjHyrLMw
      ++rZsXoNhVVefK3NJl5vCxVVlVj0CtV1DW3z2KM6MemKS3jhzU+Y/L8XcVftJzKxC1dcMhYj
      fnZvLiY+vgNW92HW79pHVGpP7r/7FiJtJujfD1pq+GDBWpav2YMVQKcjOb0b2WkOyq1+zAYF
      W4gtED66wOObpTt3kjSkH9dfdyM+cxgOm49leYX4rbHcef9dpETa0Prn4IhMIaTj0cd99UYL
      nXv0xNF6tDea7YRZjbicEgDiaxzcuY7f33UHigLW2Cye/csjxDlM5K/MxeU3cPF1N5H/5tOs
      XLeM7VUTyYrQgwam8CSitAo2FG/hUNM+IiJTCbM68X+PZSuKwtgrbmTFumJ2lGzEFBLJNROv
      JcQozyyIn17lgRJe//e/cFWXs/VgBVHpA7BbA/e7PAc38eD99x4zddsgPvQccT7DVxewdOMu
      dEY7k26+huRIK/6WGrbsq6BD3xH4m+pwN7tJ7BKD3WJqK6VrWgY61tLS1IwV0Hwe3nnpUd5p
      /V4zhtK/V3d05jAuOW8MZVNmsvyrL1i28AusjljOueAK+vfy0dSiYo/rRIw9ULaimDh3wqUA
      +N2B3r7O+oP86ff3tS07JfsC/vbEjYDcAxBfwxGTxLljR2JUQGePwm4x0FKzh5XrS0Fvpnjl
      Ypw6HQpOFi5aRdblQwEwW+PpnGhj5ZqllOma6djvPAwVhVR7v2WBJzDao7nm4nP5y+sz6T1q
      HH3So3+GtRQCPC0uSneXotMpdOs3nPGXX0VE62BuxohOXHf5uRh1Co0Hi3n/yxVt8xnMoYy/
      Yjwri/5BQvZgzu7fGYCGynIqqpsY1qUjJnMdeoMOnz8wwNuRBiVnczMaoB1pnNcZGDHuSrrE
      2amv3M/cOYv4YuYH9Ov6B+IyB3D/g1kc3L+Xkk1FFKwr4rOPp9Ij5xEAfB4Pamt/Xk3TKNuz
      B0t4FGG2wOHdYo/kqmuvwtY6EkVoRHLb458SAOKUIqI6csHF47Ef8/qgNUvyqWx0ERoWSUH+
      cgBMBh1rFi/muvGDAdBpenLSUsgt2I4HIz07J1NyaM3XLkdDw+f34fMduT+goNfpURQFR3go
      oCMuKoLg7cMrfm5J6b158on7sRmUo73FfbUAmByxjBw5GqtJT8VG7bgAALCEOjABIeFxWAyB
      ecsPlNJgiKZjfAx2k55Qu43S4iI2bd9Pn84daG6oYGFePqpmoENqHK6qQKe0Hn2GMCwrEo+z
      mm2b11JceZjd27bx6Zsv4Y3rw2MP3cnQEaOIfutFPli4gSqnQseEUHZs3kZ+8R7G5KRTX17C
      nx59EnvyUJ59+lYAjGYHA4YNJ+LYo31rYEgAiFPSThgdRfM5WZm3Br8+knsefpyUqMA9gc/f
      fpE5a3aQW7i3bdqUnt0xTpsPoWGkJnekuK3Mk7VU7Obf/3wJY+uwuObE7vzuhkvQK0rbHGfU
      WCXitKMoOtDpThoK4jvtdydNpLJnazHR8UnERNgwG21cOHY4b06bx79f/BtdslKpK9tLaXkl
      mf3PYVCXaBYVgOb38sW7/2G53UiLs55dOyuIz+pPRlZHkjsmklu0huefrSfKpmNbcQmWkERS
      Y2NIuWQc6/e8zdRX/87aLhkc2rODRr+OoYP7caTPsauhjH+/8Dym1tN+TRfCFddMokOMRQJA
      HE9vNNMxJR1PSAeOHaq8peYwbns4A0d3pmunJCyt7fHnnHMB26tnU3molPiOqbg8SYTHZzK4
      VxearMl0SooisUMKIWoiBqOJ5E5puMwxGHRGOnRKpcVeh6fZxZH3G+ndnrazfXNYJJmZGUSF
      f3N3fSF+CJ3RRHJKOqqjA/oTLzEVA8mpaYSGJbY9b2+0OcjMyCAi3NY2mcFkJz0zk4T41sEi
      /C1UtRjo3Kt/2z2r4RdeQ0hEPF8uyKO6ogLFHMr5l53H+HHnYlYUHNEJZKSnAV5cLi96g5VB
      o8/j3HEXER0WwaSbbydk5qds2V1GlRuSs3py7kUT6BQTij52NH+438qMT2dTVVmJOSyaCRdc
      w0XnDgbFQ0LHVFL1TXibnbS1whr1+I9ccMtgcGcmGQzuKBkMTgaDO9aRweBCQ3+OR4o1vB4P
      6AwYDfrjvvH7fXg9XhS9EZPRcMrB5762VE3F6/GioWAwGVuvkI9S/X48Xi86gxHTCcv9Ok6n
      U64AhBDip6OcNEDbEXq9Ab31hx1yFUWHyXzqcgF0ej0W/Xc78B833w+qjRBCiF89CQAhhAhS
      QdsEVLqtiJLdZW2fFZ2eiLgO5GR3Re91smbVSuqbj3ZfMhjNdEjrTFZqEq6K/eSv20RCai8y
      YjVyV2865mEABVuog545fYgIMVO1t5g1W/Ye396nQUJmDh1CWijcUHLcvFZ7GD169cbmqWBp
      QTEGYwRnjR2EAXA7a8nNy0cx2xk0fAShxu/fpq1pGnu2FVG0eRtVdU3Yw6Lp078/nVMTQfOx
      cW0BByvrjpvHEZtITmYC+avWtb3UGgBVJavfSHS1OykpLT9hSQpZ2X2wew+ztvgAKd1z6J6S
      AKqHgvxVOHV2Bvfvgwk3RYVrKN5RSrNXIy6hI4OHDSEqxMyurRvYvvfQCeXq6NKrL6mJURza
      t4OCtUVU1jRgDY0gu88AuqYnndQ+eip+XwtbNqxj6/ZdNDV7CY+Kp3f/fqQmxbbdhFY9jaxY
      sYrGFoUhI4YT3joYXnP1fpau3gxoZPUaRnpSGM7qfeSt3gyKjqzsPoR4D7N264GjY8woesJj
      4umV3Q2rycDerevYVd5E3yGDcBzTQcjnqmLhktVEpXShV1okuUvyMYUmMmx4DgagfFcR63dU
      03/gIGIibKheN1s3rWdLyU4aXW7CouPI6TuAjA4x33rPw+9pZuO6QjwGB3369uTE3cnb0sSG
      tWvZsXsPLrdKfIdUhgwdSGSoFa+zkq+WriGqUxbWlkMcqGw6oXSNyNgM4m2NbCmtOGn/T+s1
      GLu7jE3bjj49pig67GER9MrpTagFNq5dxeFGjUFDBlG6qZCyqmb6DBxEXKQdb1MVK1YVEhbf
      ld49OqEAlQd2sW79Rg5W1KAzWcnomk3/nO6YDT/Bea7q4qv5uaiGCEaPHYQRqDu4jZUb95Ld
      exAR1mZWrliL/4RtHhHTgX59szG07VTN5C7Ow+VViUxOY0D3LDTVw7IFi3BpCiHx6QzvkwVA
      S2Mt+ctX4bGEMmjQIBxWA6q3ifwVq2hoPrFjjUZqVj86p8d+r0emgzYAthfmMfnzZeiNRgw6
      XeDGjcHKRdfdzWUDE5k78wNKyl0YjUY0TcXv92OxxXHXo48RV7eV96dOZvDF95HYW+PdqVPw
      qDpsFiNetwefppHZ/1z+9MBNlG9fx5QpX6AoOvR6JfD4raYx4sowRiTU8e7bU/Dp9egNelSf
      F79fIbnbUJ588BoK5s6kuNKNPiaBs3p2YMWcD3jz42X0OedKRo36Yeu9YelM/jV5Jk63j/CI
      cBqqa5m3YD4TbryTS4aks2rhbL5avx2dXt+2I2X0GUNGZD8++XAq1U1+jEZdYD1UlesTeqMr
      zmPyF8tR9Pq2S0oNA1f+NoGOTYW8M3U+CZkDePyRe4mxuln8xQwOWhLI6Z3DmgUf8vqH81DM
      odiNKtX1TSxeU8zfnriTrauXMnVu/gnlGpl0dwccVPPy359nb7WbqMhw6mqqmDNnEXf98TEG
      dUn8xm2g+tx8OeVVPlm8Fh8mwuxGausamb1gMff8/kF6p8cBsG9rIW+/+SZNHnBa47l8VI/A
      6I2HdzN16mR8mo6zJli546pRlOQv4u135gE6rr4jhk6uDUyZOh+d3ojJqMPr9qDpDYy94jZu
      HD+SwsWfMW3pPp7pkXNcAHjq9zP5nXfIOf8qusT24KPJk2mxRWKKeYIhXTqwd+MqJk9fT0Ja
      d6LD9Mz6+C2mz8nDh5FQm5H6+ka+nDWHux59iv7p0d94MPC56vn0w7dotHahW++eHPPKWvzu
      Bt57/Z8sXLkZxWjBalRoaJzH3MV5PPTw74lq2cfkd96h93kTiKzewNJ1e9E0FVXVWvd16Nzv
      MgbH7WfK56tQFF3rqwsD+81l92QQV7WaKe/PAYMBvV7B7/WioafH4HH88c5LWbrwM4oO+Mjq
      ndO6X+6i+FAj99xwCe66CmZMe4+UQZPI6dGJgyWref4fr3O4pgFHRDTNDdXMnTuHQedP5P7r
      Lvjx/Uj8TUyfMoVaxYQ/Morz+2ZSsWsjk9+ZzW+jMukeVc0Hkyfj0unQ644GTmbvseT0OTYA
      XHzx/gccaHIRljGUfn/LorlyB2+8PRmPotBp4Pi2ACjduJTX3/4Avz4EoyORs/qkobkbmPXp
      J+yrbMDnC5yg6nQ6FEXj/GsS6Jwe+71WK2gDQAcoOgMT7/oTgzIjqSvbwd+fe4WCDcWMH5gE
      QEJKTx74/W1YFZXCJZ/x7oxFrCvew/lJrf35NDjSs6//mEu5acJofJ5mJr/6LFu3FnDYdT2K
      okPTDIy//nbOHtD5SP8LrCEODmxchAKMnHA7l4/uht/jZMrLz7KueC0Vvtu46bdX88hfXuPj
      99+nS9R4ZsxagT0+nYmXndf23Pz34XeV8/bkGTQTxm1/uJe+GQns27qG/74+hVkfv0vf7o+i
      A4xh8dx7/wOkxASepDKabejrdwMK3QaczW+vv5gjx4qw8CiWFQcGs5p0z58ZkOPA58YAACAA
      SURBVB7e+o1CSFg4WxetBaB851pmLVzFjRf3PuaP0c/mgrW0KNE8+ugfSY02M/nlv7KpdBN7
      67yBMeOMFm6493H6pjjafnOhjnD2rp/LnsONjLjsZq49bxBbVs7lrenz2LBxFwO6JH5D26ZG
      WfEKPv6qgKiU7txx283EO8zkL/iIdz9fzvKCLeSkx6Hgp3DZCpweFUVRWLFsCRcO6YrNpAel
      dSQ7D2zcUozfP5T123aCTgO1day71t/7FTffw8icdJoqS3npH/9h6+a1uMYNp21EvBMdcwap
      tA6f53HV8smH0+n+6D2B7zUFNNi7tYAv5uZhi+3KXXf9huRIO2u+ms6UT5eSv2INfdPO/w5X
      Q0rrko63ZdViFq3cTFT6AO69fSJRNj1LP5vKR/PXMHX6XH53UVpgbr2Za259iEs9XrYum8m/
      py1jwo13cFa/LIyWENZ9+QaaZuaWBx4kJy2ubf8PcUSyYV6gM+GEWx5ldM84PE1VvPrsM+za
      VEC1e3zb9lGU1r9XRaVwyVwKBvSlp6O1zqqC5mvivSnvcqjWx+U3P8DZA7riqtrLc88+x6YV
      S6m47DzibD/yKkAJLE/1u5k+9T36d32irX5oR3+bPUZdwW8vG9HW0cpotmM+YeMqKGgoNO3b
      RJnTT82GIjyKgqZoR68+vU7y8tYErihUJ7nL8hmWk4bRFstDT/wVn6oy991X+HJVOb/7859J
      ibRjD4343qsVtAEArc0hO7ZgarRTdWAHTZqB7LSObQc3n89NdXU1ZtXNoapaVCAsxAo0nFRW
      zaH9rF+3DrerngPldUQk9ibKqm+d0s/eXSUUKI2BiRULA4cMbpvXWV9HdXU1rvoqGt1u0Nmw
      GnUkdh/JJaNX8MnSIp7483ZcPj1XXzmR5EjbScv/Liq2b+Zwi48+55zDmP7dUIDwQaM5a10B
      M1aUUlpaCQTOkEt3ltBcZUFVDWT37dO2ozTWVVFcvBWDAqaQaAbFxrZuS5UdWzegqw10EDOY
      rQwcPvKYje1n6dxPGdi7E0cfPNYRGR8J27bzv3++TJ++fek8YjxX9uxFrMPITkDz+9lRvAGt
      yg6A0Wpn0NAR2B0R2Iyweu7H1O3bSpfOmdz74BNkpiR/89meprKuYANexcK54yfSNa0Dmqpy
      9qU30eesK7CHBILGWVFK/padJHfrR4rxMMs2r2NrWS19U1qHpPCBwainrnQje2rq2Fm8i9DQ
      UJz1rmMWprJ/1zbWqfXUHtxJY1ML6R3SsJz00Pk3UxQo21bIrEXryDjm56VbNtDgVrjuyivJ
      zugImsaYSyaRM3I8Nnvoj7jBp7FjSxFuv4ErJ11FRnICCnDJxOvJW7aW4oJivK0BAAph4ZGE
      AYdCQwGFUEcEsbFxx5TnY3vxJrzV+wMfdaGMOuvo/t9QW0NNtZ66igM0+3zoDHbMhlNvI39L
      LTM++pSO141q+1lT2W52HaolJWcEl4wZiMWgI8IRxtPPv4KmN+Ow/HSP/yoKNJZv44NPl3Je
      8snfV5XvobDQ2tZBrHOfwUSGnziVhtGkx+ttpGjTfmpKitGbQzBrzrYpaspLWbellJTsEYS5
      dlKyqZDS8gvpnBROZHQMACEWM6AjIiqauNgf1lcmqAMAzc+y2dNYduSj3kaI3d7WJl9Vtp2X
      //YMoOL1KXQdMJax/TNxbT98UlG7N69m9+bVbZ+7R1pR/UdeNKGxfsVXrG/tRa4ZY+jYpWdb
      0Kxd9BFFuXr8Ph9GWyiXXn8N8VYjigIXXXszq4oeYV+Ni8z+53HekG4/+HK2qbEeAHuI6egQ
      tzoDceGhaJqGqgZGQPS7apn5wdutU1j43V//RvfWJ9D2b1/P6zvWA2BLG8yA3t1aV0pl1fwZ
      rGqdyxYRQ2a/4YGvTOGcPSyH5YuX8tHMuZh8R7awwoVX30at7z3yV29g8bwvUHR64tO688Rj
      DwUmUb2smDudIx3wQ2IS6dx3KMlZ/bn52gnMnLOEjYX5FBWuwmKN5No77uecQZ2/cRupfj86
      o5Ho6GhUTyOvvfoC60sC9zA6ZAzgwT/cSnFRAWXVTsZeNIb+IWWs3vweS5fk0+vGcW1175bT
      i01rN7A8bxmlTXqGjBzIiiVL2pajKCorF81m5THLjoiw8n173vQeMZLajatZPGcaSp+jRx2/
      1wOYSIhxoOBjyvOPs2JXNQChqf147qFbMX3NgfSbqTQ1NAIq9hBz27bUW8OJsSqUt3yfof1A
      UfzkzfucvNbPmqUT/Yb0b/t+0Yz/I/czHX6fF2t4DFdMupLwUxyZIhI70CsxnKVrVzJ3VUTb
      ODqqz4umacRERmPU69i54gv+PmUWGqDoTdz8h78yMOP7nx2fSufBw9HvWsfqrz4i8bzBJ31/
      qGQN75QcHfpkYnQ6GQknv1G4Q+euNJQUU7xxOY2bdpKSPQRl53J8AJrKppW51PiMjBs9ipj6
      EDZOmUteQTFZSUN+0mFRgjsAdAYmPfAUwzIiaazcx3//+S/yvnyfQV0CI+fFJGVyzaVn8fm7
      77OnSaX3wMFEO2zsO0VR/c6+glsvH4PX08ysd/7H/MLV5K4eSwqgaXquuOUezhvc48iCsdlt
      HMmRPudeTXfbIT78fAnm0EiGDuqH/sjQCGEJDB/Qkw8Xb+ScCy/43mePxwpzBE5FGhuP3kDS
      VB/lNfWgU6C17VIXGsedd99DarQV0BEVF4uvPHBgyeo7mluvHYce0JlsbfVEb+TGB55hWOfA
      zq4oOmx2AzUAfoWeA87GX11K7polKBrEdklE87ko2babHkPGcvUNv2X/rq18MX06RTs3sqLo
      IAYCTUA3//5pBrX+ASu6QLmHdu/AZYrn9396FsVVTf6SBcxatJzc3MWM7JeF9WsPfApGkxHV
      4+bQoXKUlFQysrqBKZx1BQU0NjagehvIy12DH4UVX0xlrd6HR4W1+cupueKctuDumNGXvWsK
      mDd9OnqLjW7ZKSw/evxH0wxcc/t9jO6dSVPdId5+9V/MmTGLQf0HfK/fmz0ugzGXhvHS5Fl8
      ubAMlMDvUW8yAs3sLauhf0YcnTJ74nZUsWr5Kurqnd9c6DfSERYeBpTT2Ohp+6naXMMhpwZm
      /fcankPTTNz5yOP0zThyb0ZPSIiFna2fzr76dsIqVzN9QQFhMYkM7JMNtJxckN7CmAlXsKv0
      eRbPmYOm+kkB9EYDiqJwsKIMr0/FHpFE3379OLBjC9sP1tDi+X6B9U30thgmXXc5j730DjM+
      Wwgc/2x+9tkTue/qs9o+W6ynvlo3RiSSnVlO3tI5aH6FCzO6s60k0CTmbqph+ep1oHqYM+11
      jP4mQGXDqlyqxw4g2v7THbaD/DFQBYPejNlsxmKzoTfq8Pt8eDyBM2GzxUHOkNH89vaJhOqb
      mfHeW+wsrztlSTq9IVCO1YLFZEBTVdyeozuxotOj1x/5p+DzH90pY+M7ccEVN3PxkG40lO3m
      tbdnto1HrgBGXeBlKiaD6cTFfi9R6d2IMsOmJV+ycE0xPp+HomULWLx6C2GOGNLTAs05BoOR
      +PhEkpOTSU5OwmYytpVhtztISkomOTmZpLioo0+aaIGD85F11OkU/Meso94cymVXXUWk1Xh0
      5EJvA9Pem8r/3pjKvlo33Xr2pXOnQB18Pt+py1UU/D4/W5bN5a03Xmfusg1EJ6fRr3c2ZoMe
      VfWdNI7RcRSFPv37YPS7+XLGRxQfbGD0ORfTv1sqeiUwX9murZTsLcMRlUyXjI6kpqWT1jEO
      X20puYW724oymqLonh4WeEDA3pG06JM76uiNRkxmE1abFZNeh+r1HPO7V2luduF0OgP/XM1f
      W+3eIy9iSFbicds0q0dfwi06Fk5/l6Jdhxk2bgIDe2Z+rx6mAH7Vi+tIHZxOWtxeUrp0w6Tz
      MGPKFHYfqsHjqufjN96iosVP95zufN898fj9H7zHvKYwsUMGl994D6O6JVC2rYi3P1rwteWE
      xWdw1cVj0ft8R+8nJGbSNSGC8s35TJ+/jMjMXlw+bixW8/fvGPXtNNL6ns35fTKO+10c/VZB
      bzi6rn6//5RXfD6/ntSsHqg+H4pBT2a3Lhx5wO7QzvVsOdhAbHIqGamd6JjejU5xEVTuLmHT
      zv0/6doE7RWACqB6eeeFB3m39TVsqt9P1wGDSYk9NrUV0nuP4KKRG/hg/mre/XgWE/vHnnSI
      KVgwjZu/+hgIdLu3Rnaib04WTeuLAT/T33qFmW8f/cvsPuAKLh5kbhvuTNEZGH/9rWwo+SM7
      C2axoHAw5w9MD9x4+okG6zDYE7j1lmt4+d8f8OZLf+FtnQ5V9aM3Wph43SSSwkyo31LGqapy
      ZFtOeeEhph5z9Blx1a30P2YPi03vzfizB/LWZ4HGAJ01ngtH9uL1GXn87ZH7URQF1e/HHNGB
      gTkdWb8LNF8Lbz33IG8fU+6YSXcy/qxziVm+kYWfvM7iGW+2PqmlZ0zOECz6bzqvUYjrMoir
      x61l6ux8nnr4PnSKgqr6UTUj2RkZbMlfSl2LwrW338LFgwND/FaU5PPI314lL/crhk3IDmwL
      TUdWVnfyd68ipWdXjtxnPLoNfXzw378z7cj+pap07Dma5NhwSgBo5tmHf8fRDLXz7PN3H7et
      j5RltDm4fNLVbH7mFer8ge8Su/ZnwpghvDtnGX977IG29dA06N0t6+hTN9/i0J6N3PfbW9o+
      Z+aM5I/3TmREYTGLVxfx6P13oSiB/To8IYUbJ14IzcVfW97J+4iH1557gv875nc48sI76RZy
      dA6d3sx1t9/FlocfY/3ij1nVOrTyEUe3qULf0eMYsKqQFVsPBpalt3HtTTey+6+v8MXU/zL7
      /ddA0/CrKmEJaSTG2r/Tdvg2R+qgM5iYcMONFGx9ggr30XXWgM2LPuCWJdPa5ontnMOTf/wD
      ERb98eVoKj27d4bPc9HbO9G5gx0F0PxuchcvRzOEcuWk2xneK/Amvu1r5vPXl95m6eKVDOmR
      gvmYloAfc3gI2rGAdm8qZN22PW2fDQYDkXEd6dc3B5PqYnnuErymOEaOHIBJB+6GKpbkLafJ
      Y2FATiobijaT1HkgXeNgfu5q/EeO0no9IfZw+gwcSKzDRsWezeQVlpy0/NjUbLrE6Vm5agPp
      fYaTnRa4aXZgWxFrNu3A0SGdswbmoAC7igoo2lPOwBHnBl7l9h187VhAmkZN+S4WLsnH2eLF
      Yg9j4IizSE+MBM1H0crllNZ7GTFyJJH2Yx9PrOCr3JU4EjozuF/X4waK272pgHXHPM99RFp2
      PxL1DSzfvJ8hw0eSGBWCu7GapXnLICSWUUMHYzaolKxdTeHm7fhRsIZEMfKss4gLt7Jj4xqK
      dpx8xpOZM4BeGR1pqNzPkrwV1Da60RvNdO01gN7d0jjx+H+qsYA01c+ebUWsXr+FFo8fW2g4
      vfsPJqNDBKtyl3KwCUaPHklUSOtZvdrCojkLqPVYGDUkk7yV68jqPZIEXSVLCrbSuedAUqL8
      zF+ylh79huLwHWLFhu1ty1MMRiKjE+nfP4cQs5GSdcvYvPvEe0l2zjmvHwvm5ZKY2YN+mbEs
      nLOY+O596Ns1DVQv61YsZ3dNM8NGjCQ+wg6o7C3ZyOr1W3C5vZhDHPTuP4TOHWOPW99TjQXk
      dztZnreYynr3cbWITshk2JBeGPCyaU0+60t24fNDVEInxpw1khCzHq+zgs/n5pGUlc3gnq0h
      WbqFvLU7yBk0jIwOgZvlpVtWs3bryb/DlO4DidXVULBpBznDzyM9LgQ0je0bVrNx1wESM7ph
      cJVzuN7HiNGjKS1cQVkzjBw1ErtRR9X+nSxfvYH4rD4M7JkWeDy3sYplS/I4VNOAYjCSlNaV
      YQN6n3RD+QeNBaS6mPfpXEJSuzCsT3fQVLauzWfL/mr6Dh5JjNnF4kUr8JwwW1hMAiOGDmkb
      Khq1mYVfLsCY0InhvVL4YtZXWOMyGDuwC7nzv4TINExNB6jzmxk5ZiyhrUN4ep11LM3NxWMK
      Z9SIYdhNekrWLmNzaQNnXTA28Kax78npdAZvAJzpZDC4o2QwOBkM7lg/72Bwvx5n7GBw9fX1
      OJ0/5ibYr5/b7cbj8VBVVdXeVWl3mqZRXV3d3tVoV0eaoGR/AI/HQ0NDA263+9snPoN5vd4z
      MwAcDodcAbReAURHy6sUq6uriYqKCvorgLq6OtkfCJwcyRVAa2tJe1dCCCFE+5AAEEKIICUB
      IIQQQUoCQAghgpQEgBBCBCkJACGECFISAEIIEaROmwDwez00t3hOPa6FpuF1N9PY6Dw65IIQ
      Qogf5bToCKb63MybOZUKpQs3XDn8pPGut69bwuRpc/ErCrEp3bn5xolE2IynLEsIIcR30+5X
      AE015Xz8zmt8MGsptU0nD4eruqt4/T9TyBp6EXfeej112/KZtWRtO9RUCCHOLO0eANs2LGPz
      IT8902I51VjElds3cMAdxfgLh5OS0Y1xo/qzevUGfL98VYUQ4ozS7k1A3QddQNfBJha99wI7
      TtG8X1ddjSWxI+HGwGuXY+Oi8DaUohEY36Spqem46d1ud9CP8SGEEN9FuweAxRbyzROooJgM
      x98XaL1u0TQNl8t13OQ+n++4AJi3uZynv9z601T2Gyx9cBTGb3wRSfsb/eJSPL5ve+XLj/PA
      2Cwu69vhZ13Gj9Hk9nHuK3nfPuGP9NfxPRjdJfZnX86P8afPN7Noa8XPuowBqZG8clXOz7qM
      H6twTw33Tdvwsy9n+h2DSXCcXoNUtnsAfJvwqAhaDm6kWQOrotHY0IjBakEh8BKXE8e7P3EY
      aJfHz8G6r3/VXjApq2vG/TMHgNN9ejfOaZr2i+wPzd6f7j20P5cap+dn3xZVTaf/kMstPvUX
      2SdOxycYT9NTVo0dG9dSerCGyLQuhLSUsnTNDjzOGublFtItO/P0Ty4hhDjNnTYBoNMr0Pae
      Sx+zp/4fi9fsxhCazE2/GcdH/3iS2+5+gEPEcum5w9q1rkIIcSY4bU6kz7vhIc5FaW3rN3D3
      s/8BnR5QGHTO1fQaMo5mn0poaCgmg/6bCxNCCPGtTpsA0OuPrYqCwXhMRy9Fhy00DNsvXish
      hDhznTZNQEIIIX5ZEgBCCBGkJACEECJISQAIIUSQkgAQQoggJQEghBBBSgJACCGClASAEEIE
      KQkAIYQIUhIAQggRpCQAhBAiSEkACCFEkJIAEEKIICUBIIQQQUoCQAghgpQEgBBCBCkJACGE
      CFISAEIIEaQkAIQQIkhJAAghRJCSABBCiCAlASCEEEFKAkAIIYKUBIAQQgQpCQAhhAhSEgBC
      CBGkJACEECJISQAIIUSQkgAQQoggJQEghBBBSgJACCGClASAEEIEKQkAIYQIUhIAQggRpCQA
      hBAiSEkACCFEkJIAEEKIICUBIIQQQUoCQAghgpQEgBBCBCkJACGECFISAEIIEaQkAIQQIkgZ
      2rsCqt9PXU0VzhY/UbHRWE1GFEU5aZra6gqamn1ExcZht5pQvqY8IYQQ3027BoCmeljw4Rt8
      tHg9FhMothQeeex3JEfZj52I+R+8ynsL1hMeasNvcnDfg3+ka1J4+1VcCCHOAO3aBFR7YDtz
      VhRz832P8a+XXyQztIIv5q9B1bSjE/mr+Wz2Kib+/lle/ecLdIl0s3B5fvtVWgghzhDtGgBl
      B0vRwuLonJGM0RbOoEH92bdvEy2+YwIAIzaTker9+6mqrKTJ5SbEZmu3OgshxJmiXZuAPJ5m
      bPYwbJZANSxmG6g1x0+ks9Orb2fmf/wf8mdbaHR5uKhXDwB8Ph8VFRXHTe7z+YiJiflF6i+E
      EL9m7XoFoENBUzVU9cgZv3bSNJXbVjJ/zQ5uvv+PPPP0nxnWpQPvvfcZPg0URcFutx/3z2Kx
      /LIrIYQQv1LtegUQGhaNs76IBqeb0HAz1ZXlWK2h6HVHn/GpOngILaIzI/p0w6BojB7ai4IP
      N+JSIUyvx+FwHFem0+n8pVdDCCF+ldr1CiChYxoRWg1fzl/CpnUrmZ+7kR69B2DSqyyZ+QEr
      i/aSlJmJtW47n8xfwY5txcxevJKErK6E6Nuz5kII8evXrlcAtqhk7rj3Pg4crqHBpXLNLffT
      pXtnFBRSumRjiHQQGp/M44/9jup6F+VV9Yy45EY6dEqTHmxCCPEjtXNHMB1JaZ1JSjv5m9Ru
      2W3/T+/ai/RfsFZCCBEM5ERaCCGClASAEEIEKQkAIYQIUhIAQggRpCQAhBAiSEkACCFEkJIA
      EEKIICUBIIQQQUoCQAghgpQEgBBCBCkJACGECFISAEIIEaQkAIQQIkhJAAghRJCSABBCiCAl
      ASCEEEFKAkAIIYKUBIAQQgQpCQAhhAhSEgBCCBGkJACEECJISQAIIUSQkgAQQoggJQEghBBB
      SgJACCGClASAEEIEKQkAIYQIUhIAQggRpCQAhBAiSEkACCFEkJIAEEKIICUBIIQQQUoCQAgh
      gpQEgBBCBCkJACGECFISAEIIEaQkAIQQIkhJAAghRJCSABBCiCAlASCEEEFKAkAIIYKUBIAQ
      QgQpCQAhhAhSp0UA+L0eGhsb8fr8XzOFhtfTQn1DwzdMI4QQ4vswtHcFDpdu5K0pH1PX7Mbi
      iOOGm28hPT78uGn2lhQyefI0nKqCMSyBm2++hfRERzvVWAghzgztegWg+ZqY8e77KLHdufOu
      O4hXqvlwxjzcfq1tGtVTy39f/g+xOWO49547ifWV88Hspe1XaSGEOEO0awA0VRxkR5mTc84Z
      RUqnNMadN5Y9W7dQ73S3TVOxbS1lSkfGn5VDbV0j5119G9ePG9qOtRZCiDNDuzYBNbua8Jtt
      RIWFAuCIjEDn9aGqats0tYer8Dbt45mn/44j1EhlXQvX3/U7OiVE4/f7aWpqOq5Mt9tNaGjo
      L7oeQgjxa9S+N4E1QK9D0R9TDeUUk/l0XHX7Azz22BOM6ZXAtI/m4wM0TcPlch33z+12n1yA
      EEKIk7TrFYDVHoK+pYWmJhdE23A5nWgGAzrd0UAw6o0o+mj6du+IXYH+2V1ZXLIHDTAaDCQk
      JBxXptPp/IXXQgghfp3a9QrAFhVLrF1j2ap1uN0uli5dRkyHToTajOwoKqT0YA3JOb2wqgdY
      smobfq+TlasKCU2MRN+eFRdCiDNAuwaA3hzOldddRvHCD7nt9ttZvLmSK668CIteZfa7r7N4
      zW5M4en89uZL+fS/f+HGW+5g+X6VG68ed3p0YBBCiF+xdu4HoJCWPZwX/9OPpmYPtpAQzAY9
      igL3PPdf0OlAURh49uXkDL0Al9tLSEgoRqOc/wshxI/1owJA0zT8fj/Nzc3YbDYURWn7910p
      ioLJYiPSYjvu53qD4diJsNjsnDCJEEKIH+EHB4CmaeTn5zN9+nS8Xi+TJk0iNzeXu+++G5tN
      jtRCCHG6+8FN6VVVVeTm5vLYY48RExNDdnY2ycnJ5Obm/pT1E0II8TP5wQFQXV1Nx44diYyM
      DBSk05GTk0NNTc1PVjkhhBA/nx8cAPHx8ezZs4cdO3bg8/moqqpi/vz5ZGZm/pT1E0II8TP5
      wQEQHh7OxRdfzPvvv091dTWvvPIKSUlJ9OvX76esnxBCiJ/JD74JrKoqmZmZPPTQQzidTiwW
      C0bj/7N33/FRnXe+xz9nelHvXaCOCpIAgenF2GAw1bg7bknsOM4mm9e9yb17d9ebzcYp3k1c
      4g5xwzYYMJjee5GEUO9CDSSh3uto5sy5fwhjC0RiELZsz/N+vfzyi9GZmd88c+Z8T3me52ix
      2+3DRvIKgiAI3043HQAtLS18/PHH9Pf3A2C1WrHb7SxdupSUlJRbVqAgCILw9bjpAHBzc2PV
      qlVXZu7s6+vjwIEDuLi43LLiBEEQhK/PTQeATqcjNDR02GN9fX1kZmYSHR096sIEQRCEr9dN
      B8DAwADV1dXIsoyiKFitVk6dOkV8fPytrE8QBEH4mtx0AHR3d7N//34GBgaAoSkdQkNDmT17
      9i0rThAEQfj63HAA2O12rFYrLi4u/OQnP7n2BTVjfp95QRAE4Su44a11VVUV69evx2azjfj3
      RYsWiaMAQRCE74AbDoCgoCCeeeYZFEUZ8e/ifryCIAjfDTccAHq9Hl9fXwCKioooLS1FlmXs
      djsWi4Xo6GimTp16ywsVBEEQbq1RzQb60Ucf0dXVRXp6+pUuoFffo1cQBEH4drrpAGhqaiI6
      OppHHnkEFxcXHnjgAR544AEqKipuZX2CIAjC1+SmA0Cv19Pb24uiKOj1etra2vDw8ODixYu3
      sj5BEATha3LTfTZDQ0ORZZldu3Yxffp0XnzxRQYHB7n//vtvZX2CIAjC1+SGA2BwcBCVSoVG
      o+GZZ57BarWi0+nw9vYGICoq6pYXKQiCINx6NxwAFRUVrF27lqlTpzJv3jx8fHyQJImYmJiv
      oz5BEATha3LD1wBiYmL41a9+hUaj4YUXXuBPf/oTqamp9Pf3X3dsgCAIgvDtc8NHAJIk4e/v
      z5o1a1i1ahXFxcWcOnWKbdu2kZiYyJ133omPj8/XUasgCIJwC41q4h61Wk1sbCzjxo0jOzub
      zZs34+npyV133XWr6hMEQRC+JjcVAIqi0N/fT3V1NWlpaZSVlRESEsKPfvQjYmNjb3WNgiAI
      wtfghgOgs7OTffv2UVBQgCRJzJw5k5UrV+Lu7o4kSV9HjYIgCMLX4IYDoLW1lcHBQR555BHC
      w8PF9M+CIAjfUTe89Q4LCyMsLOzrqEUQBEH4Bt30VBCCIAjCd5sIAEEQBAclAkAQBMFBiQAQ
      BEFwUCIABEEQHJQIAEEQBAclAkAQBMFBiQAQBEFwUCIABEEQHJQIAEEQBAclAkAQBMFBiQAQ
      BEFwUCIABEEQHJQIAEEQBAclAkAQBMFBjXkAKHY73e2tXKi+QEdXL4qiXG9JrP3d1De2cr0l
      BEEQhK9ujG/npVCSvp8X125BZzLQZ1H40T//C9Njg7n67pJ2m5VNb73A0U+L0AAAIABJREFU
      4Qpn3vzrr9GNTcGCIAjfG2N6BCD3t7H1071MX/EEL738IiumR/DZtl302+zDllMUhcLjO9mV
      Xg6KhLjzsCAIwuiNaQB0NV2isRumJsagUeuYPn06rbU1dPVZhi3X3XCetZv3smLp/DGqVBAE
      4ftnTE8BWa2DSCYTTmYTAHqjAbWiwJeuA9itvXzwxqtEzHyQGVH9HEjvvPI3m81GU1PTsNe0
      2Wx4e3t/Mx9AEAThO2xMjwAkSYWiKCjK5VM+yrUVZRzcwsl6DfOmjaemsQXZ2sPF2iYUQJIk
      nJychv1nNBq/6Y8hCILwnTSmAWB2dkFr7aO5vQuAlpZmJIMRreaLA5O2nh4CneG9N19l455T
      DHRU8v4He7ABarUaFxeXYf+ZTKYx+jSCIAjfLWN6Csjo4U90oCu7d+zCtPQ29m7fT/iEWbiY
      1Bz59CMM4TO5Y/VTLFgxdIRQc243z28o5df/+xG0Y1m4IAjC98DYngLSmFjz+ON4yU2s/3AD
      dq9oHl5zB1qVQktDHW1dA6g1WvR6PXq9HmfPAKKiwzDoxrj3qiAIwvfAmG9JPQIi+Omv/i9W
      m4xGp0N9eQDAfc/++pplfWNu419ibvumSxQEQfheGvMAAFCpNejV34pSBEEQHMaYTwUhCIIg
      jA0RAIIgCA5KBIAgCIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIg
      OCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIg
      OCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIg
      OCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIg
      OCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIg
      OCgRAIIgCA7qWxEAstVCd1c3Vps84t8VRcHS30tXVzc22f4NVycIgvD9pBnrAhoq8/jbe5/Q
      0T+IwdWHx3/4Y8L93b60hJ30/RvYfCATtUqFzi2Qx598gogAt+u+piAIgvCPjekRgGLr4dMP
      P0Lll8DP/umnBKja2fDpPiyycmWZvvpC3lx/gLmrH+MXP38WX3s9727ajzgOEARBGJ0xDYCe
      pjrKL/Vy5x3zCA0Zz9LFd1BdXEhnr+XKMorKyPSFy1g8M5HA4FASIkNpa2wRASAIgjBKY3oK
      qL+vB1lvwtPFCQBXDzdUNht2+xebd7NvBE8/EQEotNWWsudkFhNvfxQNIMsy3d3dw15zcHAQ
      Z2fnb/BTCIIgfDeN7TUABVCrkNRfOhCRRlpOobE6l5dfehVd0Ewevnvm5YcVBgYGhi1qtVpF
      AAiCIHwFYxoARrMT6oEBurv7wMtEX28vikaDSjX8zNTFvNP88c9vEjhjBT9/YhXO+qGyNRoN
      fn5+w5bt7e39xuoXBEH4LhvTawAmT198nRROpmVisfRx7OgJvINDcTFpKcvNoLK2lf7W8/zp
      hdfxS1zIo8tm0tvWTFNLx1iWLQiC8L0wpkcAar0r9/1gDS+99A4/3v8heqM3z/7qh+jVdvas
      X4vzjKeIJY9mq43WjP38n8wDALgFTeflF/4J7VgWLwiC8B03xuMAJMbHz+LPr0+hp38Qk5MZ
      nVqNJMHP//QGSCokJrFhxWPXPO9bMYJNEAThO2zMB4JJkoRWb8Rdbxz2uEqt/nwJ1Nc+TRAE
      QRglsSMtCILgoEQACIIgOCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAg
      CIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAg
      CIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAg
      CIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAgCIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAg
      CIKDEgEgCILgoEQACIIgOCgRAIIgCA5KBIAgCIKD+lYEgM3ST1tbOxarPPICioKlr4e2tg5s
      duWbLU4QBOF7SjPWBdQUpfHKmx/Sa7OjMbnz9D/9krhQr2HLZB/fxpsf7kWt0+AWEMU///xZ
      fFx0Y1SxIAjC98OYHgHYB7vY/NEmgqYs5vd/+B1TgnR8smUXAzb7lWXkvnrWrdvCoh/8gj/8
      9t8wd1aw7WDqGFYtCILw/TCmAdDdVMuFlkHmzZyKm6sHCxcsoK78PJ29livLNJbk0EoQd86O
      w9UzgCVzp5J1rgDrGNYtCILwfTCmAWAZ6EcxmnFzNgNgdnFCbbejKF+c5+/u6sIYFIhZJYEk
      4erhgtI/OFYlC4IgfG+MaQAoCiBJoJIuP3BtRYodUF/1oPobKE4QBOF7bkwDwMnZGY2lj87O
      HgC6u7tAo0P9pQ2+l68X/Rdq6bUrKIpCW1s7OrP529F9SRAE4TtsTLejRk8/gty1HDx6irb2
      ZvbtO0xAWAQuJi05pw5TWNGAe1gcnkoNuw9l0dlcw87DGSQnTxAHAYIgCKM0pgGg0rpw/xMP
      01ZwhF/9+l8obFXx4P1L0avtpB/cTXZJAyqjH8/87BFOfPIa/+tff4vkF8eKO28by7IFQRC+
      F8Z8HEBgxCR++z8J9FusGIwGNKqhTHr6P/9yZZn46Xfx0uQFWGwKJpNRnP4RBEG4BcY8AADU
      Gi1OGu3fWUJCqzOgFWO/BEEQbhlJ+XKfy+8Ym81GU1PTNY9JkoRaPXSVoKatj3MX2r/2WlYk
      BaCSpK/9fb4qq9WKzWbDaDReeWxH7iXkr3kqjcQgN8K8zV/re9yorq4uXFxcALDKdnbl1X/t
      7zl1vAeBbsZ/vOA3RFEUenp6cHZ2vvJYRnUbte39X+v7+jjrmRnh9Y8X/Ab19fWh1WrRaod2
      Opu7LZwqb/na33dRnB8m3bfn6qXNZvtuB4Asy/T29g57zG63I0kS0hhujK8OobFgt9ux2+1o
      NGN3kKcoClarFZ1ubA/dLBYLer1+zN7fbrcjy/KVDc5YGRwcHPPvYnBwEK1WO6a/T6vVilqt
      RqUau5PJsiyjKMqY/j7tdvu34xTQzVKr1Vf27D7X29uLSqUatuf7TWtsbESn011T2zeps7MT
      i8WCh4fHmNVgsVhoa2tj/PjxY1YDQGlpKVFRUWO20ent7aW7u5vg4OAxeX8Y2uA0NjYSGRk5
      ZjUAVFRUEBISMqZhWFdXh4uLy7CjoW9aa2srdrt9TH+fvb294nqqIAiCoxIBIAiC4KBEAAiC
      IDio7/Q1gG8rvV4/phd3vi3G+lrMt4VarcZgMIx1Gd8KJpNpTC8Af1totVq+Df1v1L/5zW9+
      M9ZF3EpWqxVJkr76RSZFob6ykO279lLT0ktwcBBatURDVS7HzlYRFhF8w4dJBoPhSm8Lu22Q
      7NSjHDx6BqvWGX8fdyRFJv3wXprsZvw9hl8obq+t5NTZUkJCA1CrJGwDbRw6fJwBlQEfdxdQ
      7FQUZFNc30uI3/UvIFksFqxW6w1d6LL0tnN4z07Sckpx9fbHzcmAbaCD3TsP4B4QjNlwYxfu
      1Go1Tk5OV/7dXFPKzh17qGzoIjAoAJ1GTcuFUg6eLSBsXAhq1RcbBrt9kNRDh5ENnri5GFDs
      Ngpy0imuqMM/KAiNBD1tjZxKy8Hdxw/D3+le19raiqen51fe8PR1NLJv106yCqvwDgjEyajD
      2tvM1m2HCY4MQ6+5sd5dGo0Gs/mLrrF1FXns3LmP2jYLIcH+aFQq6styOZxbRcz44ReKrQM9
      pB49icbZG2ezHkW2kJWRSuWlNvz9/VFL0N5Qw+nMEvz8/dBqRl5bFUWhvb0dT0/Pr164YiP7
      9GH2HT2DTeuEv7c7kiSReWIXl3pMBPjceCcHZ2fnK71vrH0d7Nu5g7M5JXj4B+Ni0mMb7GH3
      1q24hkTjpP9yO9s5n51BZUM/Af4eSEBDTSmn07Jx9Q3ArNeCYiX16FEG9J54Ol8/cLu7u9Hr
      9TfUM6y9rpxt23dyvqaV4HGh6NQqOhvOs/tgDpETwm54ahq9Xn9lp0BR7JRknWTP/mN02w0E
      B3ghKXYKUo9S1m4jxHf4d9bdVMfp1Dy8/f3RadXYrd0cO3aCdgv4eXkgoVB7vohz5U2MD/K5
      bg1Wq1WcArIN9rJh7RsMqJ3J2LeF0zlVyIM9bN+8jX6dYdRzDrXW5vPehgOYnNRsWP8ede0D
      tNedZ/uhVMyma/vLyz0NfPDuO9T1DAIKdQWprF33Dh/tOoEC2K397Nm+kZzymlFWdjWF3EPb
      OJpTC12VfLB+JxYFis8eJb20DoN+dN0HFWsXGz74kHZFR/6JbRzMLAdlkH1bN9JhM6JRXbVx
      ViD9yDYOpecCMNjXwdYP3uadDz6iqmmo629V4Wm27D6ERbmVe5R2Tu/4mKzKTnrrctiw5QhW
      Bc4d3UNRYxf6UXbttVtaeWftemwmF07t/IDTxfVgt7Dt4/ex69yvWV6RrRzdt5nTBecB6Gur
      55P31/LOh5tp6BwAoPDcIXYeOY3tlrYDtFbksn7TfjxdNfztlbU091uxdFzg3Y/24eoz+t4r
      6Ye3cqKgAVV3BW9s2AWKQlnaIU6UtuJqvLqdJerLM/lk2056bApgJ3XvZtatW8vx3AsogLX9
      In977wNaBuwjvNtoyGx++2Xa7C6cP7OdfScLscuD7Nu2hVY0oz6NYumo5tU3N+Hs7crWD97i
      fGMffe2X2LpjH3rjtSFrH2hny4b1lDUOjW9qqcjh3Xf+xjub9yMrCgoKR/dt4kxe2T98b4cP
      ALtspbtvgPlLl3BbTAgXG+q4WHiWim4jC6bFM9qfVH93OyrvKJYtvgM3k0JTaxsnDuwmIGkO
      Ef6u1yzvGRaDv7Gf/IpmFAUyc/IZFx5JQ34OrYN2+ns7qKvrICEyAhQ7NeUF7Nu7h4OHT9LU
      0TeKShXaWlqImT6NOxbcjq2jko62JnYdSGfhXYtxNoxuNbdbLbQMapg1ZyFzpsVQUVFLXWkW
      WU0Si2clXjOITlJpmBAbQ2F5JXags6mSug4DbkaJsopqQKaioAT/0Hg8zVr6upo5efQge/bu
      I7+sBvtNH14rtDa3kDhnNgvnzKGrpZLu1lp2HMll+bJF6K6zh/2V28HSR4vdiQXz72B68jgq
      qi5RlXuS4kFfFk+7toum1uhEVFgwheVDG7mG2vP0yG7ord1U1jYAVsrzSwkLT8CsV9Pddomj
      h/azZ+9+SqobR3WaoaezHZeQEBYuXUGIpoX69gEOb9/CuJlLiPA23XwjXNbc1kLMpFmsvHsh
      1eerGRjs4rPdh1m6cgXGa9pZInRCAr3tl2hu70PubyW7pJWw8GBKsnOw2hVqykqxmUKIDXBG
      sVvJOXuC3Xv2cCI1Z9hdBm+cTHNzG3OXLGbelESqa6tprynkdFk3y26fPupthLWvgx5zKHcv
      WsT4ADO1l5o4d3w/qtBJJIVfuwfvEhBKsLuagvIGFKCgsBDvgPG0lxXQ0G9DkfupKK4mISYe
      FIXGmjL279vL/oNHqW3uGvZaDh8AkkqNVqsiKy2VzMp6PM06du89wsw7l+JhGn1fZY3BzGBD
      JadSM+jqsSB3XeJMWTuL59+GeoRTEpLOnYT4IKoKi1CUQYpzipm7/CF8Vc0UljXR0VBJG66E
      h/tx/ux+/vTCK+SWVJB+Yjd/fOEVGjpufmSn2dlMZWEh6RnnsJr8qMw6Sr9LBFMmhIx6JZc0
      Wky2fnKyMsnOLSPA3419O3YzacFSvJ2vPRSXJImJSXG0lRXTMWinIjsHj4SZ3JkQSnZuKdb+
      TvIvtpCQHIPcdYnX//g8Ow6nUXW+gFdfeJ5DZ8u5uU2fhNnZTGleLmlZ2Whd/Mk+vhvniNuI
      C/EcfTto9ZgsnWRknqOgsJIAPxe2fbqLO1feM8JGbygIJyZG01RSRLdN5nxWDsFTFzIrwoPs
      vAqsPS0UXupm4qRoBlsr+Z/f/hcHzuRQWZbDf//2OdJKGm+6VoPJSEdjPZmnT1JhccbFUs2O
      MzXct/z2UbcDgNlgprIwh5Mn0vEN8KHk9H7a3ROYGRs44vK+gaG4qgeoa2ih5WI1HZITy29f
      QF1lKV29gxRVnCd0QgxmnYo9777I6+9/yoULF9j+8Vpefecz5JuuVIXZ2Uh2ejqpBWX4eHiy
      Z/t2Jt2+HL9bcG9ytd6Mpu0ip9IyqKtvw6Tu58CZIpbedQfaq4+MAUnjRELCOGqKirDZrRRn
      5jF1yQPEuPaRlV/HQGs1Fd06EhLG01CayvO/fYGM/DJyM47yx9+/QEXDFyHg8AGg0Ttx/2OP
      01CWR0DCXMbpW7hgcWeCj8Snmzdx9FQmg/LN7z34jkti9Z0TKSw6z+KVa6g8e5iwKfPorjjH
      ps2fUlB56aoNlURcTBxlleX0NZRS3OHElKQIoqIDKCwpoCq3EPfwRHx1FvYfOop38kIef/hB
      nnz8EaTuKs6WXrjJSlVMuvMeYjwUqtsl1iybweHjWSyYP520w7v5dNtuGtt7//HLXO/Vda48
      +NAaumtLcQ6/jTjnToq7zaSE6Nm+ZTN7j6Vf1c4SnmHxeNFE+YVGMkurSE6IIXZyPM3ns6m8
      WE9HL0SNC6I0L43CLj2PPPo49z34GAumj+fQsUNYbmqvT8WclQ/hp+qk2ebOyvkxHDhznkXz
      kjm0+zO2bt9He9/N35FObfTm8UdWcqk0l6CUJQQMlFGrDSPBrY8tmzZx6Ew2w6uW8A9PwGCp
      5+KFS2RVNpKcEEXc5DhqSrOpKK9mQO1GZIAXWWnHqFH58sPHHuX+B59k+kRv9h45ctO1ekdN
      YcXcJLJyS7nn8SfJPbyT2PnL6Cg9zSefbCavbHSnIecsXkO46wBlLXaevv92Pt1+hOXLFnJs
      11a27thDw1VHtHpXH6L8nCiuqqOivBBXn1AmTolH33+J8qZWKnJLiEmYhNR7ka1Hsrjjvqe4
      9977+OEPlpKbdoCqNst1KvlHNNz/42fpqspFHzyFGeMhtVpmVqwXWzdvYt/h0/Rbb34bYfQI
      54cPLiA/K5uZdz9IV9ExnKJnYGgrYdOmzZwrqrxmGxEZHU9jQxXtlyrIa5CYlBBOwqRo8vMy
      qcrNxxSaQIgzHD50AE34NH706MP84AeP4aXv5GR24ZVXcviLwJIk4e4TzJSUFBIi/Nj00cck
      z72Dk7s2YNG6kH3kANrAaMb/nQuuf49KrWV8TBwpKSk4yc1sPZTD3JRIPtm4A1c3I7sOnGZS
      SgpOX7rA6mKys3nzCXzNNi6qfFgzPwWps44952qRB5oIT5hBfKg7R48dorS0nJzMdFLTsxkY
      tOEVGk9iRMBNXQTWGZyImziJlClJXMo+RGmfJyGqC+zNqEXXW0NqYRNTpyRce77+K5Fw8/Zn
      ckoKSbHj+eyj94ies5Ssbe/TpfOmOG0PA87RRH1pL1ul0lFZfJauAR3leTnMXfkAIZ5mUk8c
      Y1CtpqldxbJl86gvz+R4ag7ni/I4c+Y0Fy+1Y9e5MX/mFHQa1Q1fBDaY3ZiYNJmpkxPJP7KV
      Trd49I1pnCnvxdZQQE7NINOSbnZksYRXQAiTU1KYGBXIB2+/zZzVD7D7zRdR+4Zz9sAm9EFT
      GOf7xfem0WjIzUxjUNZQUVHNHctW4uek4ejxVBSVjX67O3cumEZ5/mnSMosoyc/m1JnT1Lf0
      Ius9WTRr0k1dBJZUGsZFDq27gZoW3tiSzuPLk/jj61uIHOfOlg93MuWOhThpb24/UmNwYuKk
      yaSkpFCdvp0iSxAR9gr2nqtBN3CJ4/ktzPnSaVhJUjPYU8e53AZ6a0vwnXwHU+MjuZR3gos9
      agoLqrjnkTW42lvYvOsYtdXnOXvmFFn55ag1GiYkzyTA3XhTF4GdPfyZMiWFyROj2PHB24yb
      vpSSoxtoGDRTde443UZ/Jozzu6l2kCQVQRExpKSkEOSq8MHG3dy5aC6fvPMezl5eHDpwiIj4
      FDy/dKTspIe9e0/hrLNT2adj9Z2zcZI72XS0FJO6DY+QZKbGBXPm1EEKi8rJy87gTOpZuvsG
      cfKNYFp8mLgI/LmheXtUVOQepdYeSEqkDxabilUPPMzEABeau7pH/foqbBzas5fImYsx2Ftx
      DpvOQ2vuQmOz0D8w/Bb3Jv9ookwtbDqcRlJ8IpIkMT5pMgPnz5JX1UJkTCRIKlSShtsW3cvz
      zz/P7/7z31i2dDFx4QGjqlWlUmHtqmfXiTyW3LWQlgvVzLxrGXfNmUlfTxNWeRRd1yQJlVpN
      VUE6lRZP5sR7Ud7nwj333sPU+CCa6tuGL67WkBgRxqnju+kyjCMq0AWTuzch3s4cP3iIgIlJ
      OGtVqFVaPAIj+T///p/8/vnn+cmTDzJ3xiS0V99K9Abboa+5nL0ZNSxbPJuGqioWrrqXRbel
      0NrZxKh68F2eJ6ow/RBtLrHcNk7L+UF/Hn5oDQkRXjQ3Dp+8UG1wZmKID0eO7UdyjyDY24R7
      QDC+ehvHj50mNDEZg0ZCrdLiE57Ic7/9Hb9//nmefPge5t6WOIpCP/9tSOzavplJC1agtNYS
      nDCFe+5Zg6fSQnufbVSvr1KpUFk72bT9FKvvXUZ5fQMzF65k+R230Xyp5ZqjodCwWLovpJN+
      cZBJMSFIkoaYpESyD+5ACRhPkKsRlUqDCjWP/fz/8fvfP89z//cXzJ0zB3+P0V23UKlVtJSn
      knbJyKIZ0bS2dLDywYe5LTKIps7RTTgpSRIqSeHk/p14Ji0kwNiF1SuRh+9fhrtRRXf3VUdD
      XiFMcB9k+5FTRETEo9eqCElIxtBYxImMUiYkJQISaklL7IzFQ9uI//oNa1bezaTYL6ZmEQFw
      mbWvkx17TrJo2d24O5vBbiU3M5Pa9l7MutFPJNZQlUf2hX4Wz52Cq5MHXXXFZOeVMSiD5qpz
      v5JkYEJyJG0tHSROiQfA7B5CVJAWSetPZJArks6JBdOSydizkfWbPmP9O+vYuPXQLZjsSyHr
      xH5UfkkkRgbi7uNFUVY2pVVVqNTGYV01b4bd2s2u7fuZuWgp3u6eeMvtnMsv5EJ1Cwbz8DED
      kiQRPSmJzuZmwiYlYFJLqNQmJsWF0tUrkRwThgREx03Gpbuat9e+y87tn/Lay2/R0G5FrR5N
      rXZOHtiNf/wcIvw9cPfxIu/sOUovXMCgNTLak+B2Szvbth1hyYrlOLl44mWpJy2vmLqajhHa
      QUX0pAQ6m1uInJSAXiWh0royKdafrj49yTFD12gmT56O/WI2b/ztQ3Z+tplX//o2XZbRT0jY
      XpXN0VKZFYtS8PDxoba0hKKiQjpkPUbt6F//9N5NGGJvZ3KIO74mZwqKsikprkZvNlzTzF4B
      oTg5aTH7eBHgM9RrKiY6BuwDRIfFoteqULuFcXu8P++/+md27t7Day/+lRNZFbiaR9mTTZHZ
      smkbd6y4Bw+jAaNJT/bZDKqaWjHrRj/Oo6elikOpFaxYMh+z2RN7cznn8krp7rGi1Q0/oyFJ
      OmKSY2hrbiV+SgIqSUJtCiA50kTPoBeJEZ6g0jJ/xnTKTuzgbx99yqaP3ue9Dz9DUX3xWg5/
      CuhzrTWFFDfpWX33LPQGMz7OGk6eOI3XhBSWzJ+OflS9P2RyThzHJ2k+KVGBuHl6Y+muIy37
      PPOXrCIpOuiqXjASnq5uOHlHMWdqNGpJQlJrcHF1JyxhEjEhvkiShH94LFFBHjQ0NqI2ebLm
      4R8QP84HSZJu6hQQgDzQybEz+SxcshR/Dyd8/AO5UHiWylYrq++/H393M6MZx9NSc56yZoW7
      F83FqDcQGOjKqcNH0PpP5P6VczAMa2cJnZMbbnojU2+bgbebGSQJZw9PXDz8mDo5EZNejd7s
      QUpKEj3tTXT1Wpk0bwn3LJp+5QjgRk8BAVh7mjmaXs7yVUvwcDIQEBhI4bmTNFj0PPDg/bib
      9aNqh7qyPOpkT+6el4JWayQwwMyRfQfxjJnFPUumoblqfTA6ueFqcuO2aVNxdzaCJOHi4YWH
      fyhTEmLQa1UYXH2ZNiWetuZ6egdkZiy+h+XzklFJ0s2NA7gsM+0YgbGzmBQdhNEzAGN3NUdS
      C5m9+kFSIgNH1Q5g4eCOwyx56HG8nbUEhQZTkp1KZTs89OAafN2G77WrtAY8jAbCJ0wherwf
      KknC6OKKXmtiyoyZ+LiZkCQVidNnY1J6aWrtwGd8HE889iDulzt13MwpIICBlnKOFfTy6IOL
      0Wm0BHq7cebECbR+kaxasnCUUz0rFKedRD1+GvMSwzE6uaGTujmVmkPy3CXMmhx5zTbCzcUN
      Z/cQZk2Lx6BRgyTh5u5J4ISJTAwPHDq9HRROUnQQDQ312DVOLLv3YabFhSJJ0tC28rs8HfRI
      vg2zgX4bdHZ20tfXh7+//1iXMubGejbQbwNZlqmsrBzz2UC/Db4Ns4F+G4jZQAVBEByYCABB
      EAQH9b0OALtdvnznnaF/K4odm832xShRRcEuy8j2G+/DK8s27KO4veLNvu/1KciyPHJNioLN
      ZrsyKlRRFGSbDVn+YmiMYrdjs8k33LtFsduxyTc/xEZRhp5/K89EKpfvwHX1S37+/X/x9X/e
      DvZhz7WN8Nx/ZOiuXzf/fY62HUdy3ZoU5fL6a//SsvLl7/+L38aw38pX9Hmb3uz3+fnzb34k
      98iv+eXvfdjfrlrvr2wjvvQ7sssysmy/8XVilL/xoe3Xrd1GXF3T9zoASjIO8u6m3VeGgdcX
      nuWlP/+Z04VDQ6jtdht7NrzFkbMFN/jKMnveW8vJwks3WZmdE59+zJ600pt8/kgvaWHbx++R
      XlZ3zZ/k3jpee/llzrcMzR1jt/Wz4fW/8ObGA5e72SlczD/JuveQVovOAAAbrUlEQVQ+pvcG
      t0E1Wad5bcO+my67qTSfN9/fSv/grVvRy/JT+WDbfqxXheFgexWvvPwqNV1D3W4t3a188Opf
      +GDnqcsDbRRK0vax/pPt3Nh0Mgplpw7y7o4TN11zXW4ar36056afP5L8tEN8vPfamhTZwt4t
      77MvrfDzB0jbvZm/vP4el9qGRpL3t15k7euvUd1yY12g+9oaeG/tu1xsvbkR6TZLLx+98RrF
      l3pu6vkjsfQ28dbrb3Kp59ouqzXFZ1i7fhOdlqEVv7WqiNdf/Av7z56/sk4c3/4+O46m3+C7
      2jm+5SP2pv/j+Xiu9/zs/TvYdDjzJp8/AsXGge2fcCTri5q+1wGglyRST6bS2Tu04cvOOk1m
      djZpqRlDe0GWdo4cOoNKPzTI6/M9hatT+9q9AjvVZbk0fcWRsdfuaSpcqi6itqFjxOVl2TZ8
      b+yqOoY9fnlvTrZbuVBUQGPntT9YtdGN9vN5ZOZVoSjQ11zGvtNZZBw+QFOfjKLIZJ05Q223
      FqNmqL4vahhWwZUjh88f722rpajs4ldqB/h8T/OLz9Df1UhRacWIN6sfaW9s2Ge+au/Ibpex
      yTLdjbWUlldesxepNrlRX5BJQelQSLbWFXIoLYuMo0doG5BR7IOknzxNi8XI0ESUl9vhmiOC
      y+vJl96/vbGKssqvvkNgl4fvcfe01VJYWj3iskN7qSPsFX++XtlHagc77XXVlFZfO1pXUmug
      q41jp7KRFZAHOjieeoas08cpuVAPQE15MdllTZgvdz+020dY91C+9H0OPWK19FBaVEDfwFfb
      k7j6O1bsVsoKc+jqtY6w7LXtPuwzX/Wb+Xx5m7WX4uwcekcYravV6MlLS6f+8hw5pUVnScvM
      Iv10KoOygiL3cGT/MWStJ0h/bxuhXLWuKlyqKqKusfMrtsMX69rnmmvLqKppHnH5ofXn2iOt
      a+vg8u9FRrbbuHS+hJrm1it/+l5PWh8YEYlZ3kJ1Sxd+LhL5WSXMmjudswUFDCrL6K4toVny
      IC7an/6uVvbv2E5JbRMGJw/uXLaSCaE+dDXXsOuznVxs7cLFK4i7ly8jxOeLrmnW/k52bN5A
      v3cCj9w185oabIN9pB7Zx5ncMlQaEzNuX8y0iWFf/N3Sy6GdW2hQB/DA0rlU56Wy51g6g7JC
      TPIc7rr9NuTOat7dno6fvp+yC424+ozj3ntX4GGSOHtsPyezijGYzVzo6CF8pIZQOxGXHEbZ
      +QJYMIHSczl4x03Cqa2c/JJLeE1woayugaQFi5BkK/lnT3LwZAaDior4afNYOHMSWqykH93P
      6exi7JKWabffzezkqCtvoSgyRWkHOVrQwIo1DxDsflW/aMVOzfk8du47QleflaDIJJbdNf/L
      C1CVe5JdpwpZtOYR/NWdbNu2lbqWXly8glm5ejkBrlp279mJTdJTUVSErDEx5467mZownqaq
      fLbtOkzXgIwk9yBLXtc2g86V6NgAKitLISWY4nN5hCROxt54kfILLST7y5Q3dTJ3YQSK1ULG
      qUMcP5uPTdIyZe4i5k6JRbINcGLfDjKKq5HUeuYsXc202JAr72GXrWQd38O5mgFWr16Fj/NV
      fc8VmYr8DHYfPkWfRSYsfhpL75z1pXa0U3L2EIdyallx74OY++v4bMdumjv78QyIZPmKxXgb
      7WzZsRe9VkNZcRnonblz2SomhvtTU3qObXuOMyBLyP2t4DHh2vVB0jBhUhy73jtJS7+MqqGW
      tgE1KQkBZOWUMS85jKrqEvzGR+DqZKD5Yilbt+2mrW8Qr+Ao7lm1FHeTjprSLD7beZheWWHc
      hMncvWjusLdpvlDE9n3HmDBrKTPjQq8po6+jkR2fbaWqvgODix+r712F/xezh9PVfJHPPtuF
      T+J8bp8YxImDuzlXWI1K78T8RUtJjhlHSfZR8mr76bxQRkeflfHx01l910yUgXa2bf6UqsY2
      XFzN9F2nB5hXQDBeTlaq6huZEGiiILOISTOmcb6igo5eC+buCi70G3hiYgi2gR4O79xGTkUt
      Gr0TC5auIjkqiP6OZvZu/4yy+lZMLt4sXr6CqKAvZna1WXo4uHMLjeogHrh7AYarRk4r8iBZ
      pw5yOK0ARaVl8syFzJ0Wd+XvsnWA0we3U9ZlYM3yxbRX5rLr4Al6LTLjYlO4e9EcjLYW3vzk
      CCEuCgXnL2Jw8eW+B+/H301HfuoRDpzOQa030NDYRsyX3vt7fQRgcA9kgp+JguIaeurLKOsy
      s2LlEnQtJZQ19VOSW4JXZCLeepntG9dyOKeO22bPxUvdyWuvvUVtYxPvr3uDggYrs+bMQWop
      4dV1H9N9ee/GZulh49q/cKiojZmTE64tQLGTc/hT1m8/QdzkGUwIdeWDN14jv6oJALttgN0b
      32J7ajlJiQm0V2bw0usf4B02kdnTJnLwk7fYc6oYa08Lx/d9RkmznRnTkqk8d5C9p3OozDrK
      O5/sY1xcCoGuOtpH2Pv/XHxMHGWlVVgVmeyifJKTZhIbHkRBUQG9Xc00NFuJDA/jQlEqf31n
      Cz4RiUxNjODAxnUczCwn+9RO3tlylKjk20iK9GX9a38mq3poT0JCoThtH399bxu+EYkEXr3x
      B7oaK3jjldexOgUwZ1YKJad38tFnx7EpQ2OqqgtO8eKbH2AMiifMS8O7f/kdxc0K8xbMRWkt
      4aVXP6DXOkhJzhn2HDxN3JTpuEvtbNy4ieaWeta9+SYtuDFj2kQaa+sYaWZkSVKTGB1NUXEl
      g4N95JVXcdttcxnv60zR+XJaG+vpHjQSFhRAUcYB3tqwn3EJKUyOCWTzuldIK63n9P4NfLjn
      HMkz5hAX4sybf/kTJQ2XT1coMueObGXdp4cJjZmI19Ubf6ClOo+/vrYOo18ks2ckk7bnI7Ye
      yEQBJAlKzx7g5b9twTsiCR99H+te+h8uDZiYO3cm7ZXpvPXONgYG+yk4e4yDp3JJvm0G+t4a
      NmzeTnvzBV7965vYXIKZOWUCNRdqr7s+eAfH4GTv5GJdGxcr8lC7RTFv3gzqy3Po7OuhNK+K
      yPhkVH2N/OXFl2lTeTJv/mxa8o/wyvrd9LZU8If/eR21dwRzZkym4OgWPtyTermhobWulDff
      eIMmyZv4sBG6ItsH2fj6f5NR1cPcBbfjPFjLn154kx758yOiOta99hIlnXomx4SQuvsjthzM
      InHaLCJ8dbz919cor++gsaaM7Zu3YA6MJjHSh10fraO0pY99G9/kYE4tM+fMxdbeyLXHE0O0
      Tp7EBXtRWHyRvrYaSpptLFp0J67WRkrr2qgoKsMcGEOgs44j299jy9FCUmbNI8xTzRsvv0R5
      fRtbPnqLk8UtzJg9B1e5idfeWEdT99C8Q7K1n10b3mJHWiXJSQnor542Q1GoOLef197bQUTi
      VCbHBbPl3dc5UzB0VG2XBzm+80M27D9HdFwicnMpr766Fq13GLNnTCLzwCds2XcW20AHaUd2
      klrWxpzZM2ktS2Xz3pM0l2fy6t8+wScikZgQT5qaWoe9/fc6AJD0RCfGUldeREF+Ie7h0fh4
      jydxvJmczEKKK8+TlBCHra+LvPR8IqIi0Njt+AVHINdXkXX2HOeLa4mJDkOSFUJDw2kqzqex
      Y+gHf+KzdexKbeIX//RTxo1wcwzFNkBaTj7OwZG4GzS4egfgbOgnu7QKgJyjm9h0oJhHHv8x
      iWF+5OVm0e8SQLCnE3aNG2HjvUjNygBAZ3Tn4ccfZe78BdwWF07fYB+lObn4J8znniW3s+q+
      B5gY6nvdpghLmAgNZdS2tVBY0kx88kSSEmIozcmn9kIJVqdgxgc6U5KaisboSZCPCzonb0Jc
      tOSkZ5J9MhVPv2DcjTrMPqH4a/o5l1GIAvTU5fLiWx+TMOs+1sxPHnGlqqkspMaiZ1ygPzIG
      wiMDyS/MpMdiY6DlPK+++Q6+Exbz+LKZKB2VpFa0ExETh21QISImgvqLeVQ39wNqZi9ZzeLb
      57J40R3o7H001FRzqcfEw/evYfbcO7lv6dyRD20liYikRCwXi6lurOdio4Xo2DiSYsMoyi7g
      QnUJBu/x+HvpKTydhotHAN7ORoyegQTqZTIzcsg8nkrw+AhMErgGRuI52EZ2ztBc/Y2lp3hz
      /R5mLXqYxdMmjNgOZSW5tGk8CPH1wK5yIjzcj4ycc9hkhf76fP7yxnpiZ9zLfbdPoqexjNyG
      AcIiwrHJaiKixlNVkUNDpwUFDYtWP8DCeXO4c8EcsPVSe76EVimAxx9Yyaz5S1izcNp1Ryyb
      3bwJ9HXmwsUK8nLKiEhOInJ8JEpXI5WlRVR1SSRNCKKhJJ9LDQPExYRis0J0WBglZ1LJP5tG
      14CemAh/FJWBcH8fCtIy6FfA1tvKR+++SasUzjOPrMTVeG0Q2rprOFPaQNiEeORBG5Gx0bRd
      KqC0vhfF1s+29a9S1OTML556GE+9ldTcEjzGReOkVeHlH4KONnLKhwJuXPw01qxYzF0rVxFs
      Uugb7Ccno5C71jzK7OnTefyJR3BVXecKrqQlKjGOlsoiSsrKkdz8CAyOIDHCk9ysIkorS4iZ
      EItWLXPu6BnCIqPRKwqeQRGYuhs4l55J4blioqLDUdsVAkLCGbhYTnVdCwDZRz5h88FSHn38
      x0wc73vN16GgkH7uHLqAcHyd9OidfPD11JCRXwRAZeY+3t92hqX3PM6shHFUlOXRLLkQ6u+F
      XWUmPNyPzNwMBm12UPQ88uMfMXPmbBZMTaRvsIfy3ByModN4eNViFi+7h1nxYcPe/3t9Cggg
      OjKWbedOcM7aTfSE5WjUGuISJ3Ko6DT2imbWPBCHwgB2Raapvopsy9AXFzNlEiajCkVl52Jl
      CV2NQ3u1SZMTrkzdoDK64ma8xNnsUqIDpnL1kEgFBZvdjqWjgazsoYs5IWGx+LqY6QQkrQkP
      506ycoqYGhuEbJeRBrrIzc1GJYHWJYRIv6GNulplwMWkBcmOu7ORFuxDcwjpTaglQGfC1+n6
      w9H17uOJD4AThw/T7hRBTKAzsj4J3UcHOHrcwrjEKThrJGx2mUFbD3nZmUiALiiKgFBPOjJl
      entbyM0Z+hw+8VMI8DXDINisNnwCfSkpzKJzYC5uI9w7QLbbUGwDlBXlYtBIoJhJiPRDDchW
      Gd8gP6rKcmjuXoqHXUYG6ioK6Ksbautpk5LQS3ZAhbvT0CA/g8GMUQdW6yCDKh2ayzdr8XL3
      QKMa+fqKk08koW4WTh47js0zinHeZtrjErEdXs/pM2YikpZhVEvYZJn+gTbyLn9et6iJBAU4
      cz5bpqujnuycoX3K0Ckz8PbQQzfIdglfH1cKC3LoWTQFZ/21I0NlWYbBXgrzc9CqQNF6M8E3
      CIkBbIM2fIL9KCnMpLN/PnZZxm6XuVBWQJtuaN2anBCHBgVQ43b5+3YyO6HTDN0FzqbRo7l8
      xy0/Dw+ktpHn6lFrzSRFBnM4Nxt7az8ro8bh7OtEsLuKk6fOoHHzI9DTlc56GbR2zhfkoNOo
      AQ3TJkdisckoGhuF2eeGNmomLxJ9/bArQ9cLnDy8aW+ppKK2hSlR1x4BKHY7MtBYXUxO89B1
      hhnTUjBgR1EUDC5eWJvqyS+rY368B7Ki0NtSS3b20Jw4UdEJeJoN0A5ORjNqlQpUJtydVICV
      vgE7av3QqVq9kycef2fQb8i4GOSBXNLP9eA/PgkXo56YhIlsSj1Lc+MF5j3zFJKkYLPL9LTW
      kp0ztAMYNmUabq5aZMlOfW0Fcs/Q1NuxU5IxDV1MQ9KZcHfuJDOniCkTAkecn8oqy9h7Wq9s
      Izz9I/H1cocaUCQtnu4SuXn53D59wtD1N2sfRfm56NSgqD2JHR98OVh0uJm1IDE0nU0r9A8M
      oujd0UiARoevqxNfvqrw/T4CAPzCItF11JCeW0dScjQqCZKSJ1KZnUG9FEpMkDNqtRYnN2dC
      Y6bx9E+f5b6l87D19eLs5IbBZCJ+6kKe+emzLJk5kYGBwSt3hZq97DGevncRh7a+S1HdtRd7
      JJUGd5MZN/9wHv/RT3jy4XvQKjY0l++ulThvNT97dDW5x7aRVlSDi5MrWpM7ax56gmef+TEB
      LmpQX29KCzW+fp50XCihsXuAzoYLFF01mdrwYrTETozj8K79xCTFY1KByTWAcX56zuRWkxAd
      iYSEq6cbBicf7nnoSX7y48cJMCkoGHD3csPFazyPPPk0Tz35ECZrNxrV0IbYOTSZf/3VLzC0
      FbNh+1FG6kBjMrlhNJhZePd9PPvTnzAxzIdBeWiCLYNfFP/7f/2SEHUz727cBXpXXLUSE6ff
      ybPPPsvS2Ul09ljQ6UduCxcXN4y2dipq6rFZLeQUFmG5Ti8ejc5ERHgwxw6eJDYpDoMKPHxC
      cddbyCxvJyEy9HI7uOLkHsyDj/2Yp3/4CG7SAJJkws3TFXf/GH749E/50aP3IvW0oVUPtYNf
      7Cx+/U8/pr/qLDsOnx2xHZzNruiNLiy752GefeZpInydkCU1kiRhCk7k3379S5w6S/lw22E0
      RlecdVqmzrubZ5/9KfMmRdLbb0WrHXm/zcPLE213PeX1rcjWfs4WFF+/66KkInxiIjWZZ+iW
      zYQGeSNpnEhKGE9G2jm8gybgYtJidnVFrTEw4457+NnPnmVWbBDdFvDxckelNnHnqh/w7DNP
      ER/owoBNjU4CrZMXj/7458yO8mDjho209l47fbZa54yrVkVU8lx++uzPuHfRdNo6+zAYdai0
      RlY/+jOWT49m68b11HfJuBmNeIdM4MmnnuHx+5ehWK1or3uXOiN+fs5UFeVile1cLM2mrv/6
      o8A9/INwk/o4k17GxOQJaCSIjJlAx4VSynvdiR/njoQaV09XvEMSeOqZZ3n0/mUovZ2YDC6Y
      XZwIj5/JT376LKsXzcTa14fu8nw7yfPW8LMfrCLn6FbOltSOeI8KDycXDG7+/ODJp3jqiUdw
      0SmoLk9lEz5lEb986gfU5RzmUHoRZrMrBoMzS1Y/yLPPPE10gCs2VEgjztEl4efvTX/deWra
      e+ltbyS3angvwe/9EYDa7MPEca4cqvEj8vIUu27jEwjSyjgnx2NWg2J04e5Vy1m3fjPP5R5h
      oLsNj3FTiJ6YxJJFM9my8W0yDnvQ1d5KZMpiPJyNoJLQSGqSFq5i+rlM1q79mBf+46fovhSp
      klrHoqXLKH7tXZ57rgS1rR+70Ze7QgM4o1KhkdRETb2dhVlZbFy/kX/7xb1Epb/BH373G1yN
      Kprb+nnin1eBdImhM+2fvzBISCTOvYuTeX/l9//xHDqVlbbu/r87R1liQhwf7EknPmESACqd
      kbiIKHIbK4mMCgYkEuct5UzeX/nTb5/DrFfoHNDwxM/uJXiiGwWvrOO//uPf0Sr99CpuzH9s
      HJbcAtQqNUb3EB77wTL+Z92nTJmUSErk8DsZjYuZzMzodNa+/AfcXYy0tHRz18NPYdQ3o1ap
      0Jp8eOyH9/ObP73HqalTeHD5Aj754GUy9nrS3tJK9Myl+LvqAQn755/y8v/cgqJZPCeOjW+/
      xEE3Ix3tHTiHjTwLpqRSkxgXxfbUcmJjYgHQObkRHRxMrW2A0GAfQMX0xSvJfOUtnv/Nc+hV
      g3TbzPzsnggmBz7AS6+8x388l49k6WRQH8g9UUFcqB76Pj2DY7lvxVze+WzL0P0Lgoff5jF2
      ymySzuTw0gu/w81JS3NLL/c//UtUXdmoVWr0roE88fgq/vjGp6Qk/ivL5yazZd2fOerhSltL
      O1MW3YenWQuoUBg+N4x3xCTumHaKt//8BzxddLS3t+M18fpTP3j5hxHgKmEYPxEv09CmICx6
      IgYlldjJsWgk8I6cxOKZZ3j/lT+y28eN5uZmZt79GFFTJjLrTAYv/+45PDyMtHb0suzhn6BV
      SUgqFVqdE8seuJ+C5//C9gNneWzlLL48N5/K7MsDqxbz3ta3KTrhTWdLM0FJ8wnxMIBKhUat
      Z8HqB8j6r9/xyc4zrFx6N2+s+5jn/j0bxdKDxn089wZ5U1p5VTtIACqW338/L7yxmedKT9HX
      04lKI113ziKVwY3ECF+K2zVEBw8dcTsHRDDO2UB7QDRuxqH2Xv7AQ7z42sc8V5WB3N+B2i2C
      hxLiMPXfxXsbP6YkYz/93W34Rk7H38cVRS2hVqmJnraQ27Oy2PDBRiY89894fGlSOkmSmH/X
      SjJeeIX/eO45DCobvTYDzywdz8VqFWpJRdCEFJbPz2Tbpk386pdPMDkom1f/+3ncnPW0tHSz
      +ke/YGhOPtU124iIqQuJT83ij795DiedQltrN4FfagiHmAuoo7Xh/7d3p0mKIgEYhl/AHRcs
      QVEQ7Jn7X6kUERH3FQsoZH5Y0dPRVTcwnyNkkPlBkvEl50TCHvZ/FyqtFlOUho7x9gyF4pGz
      XvqstkfKNZWx69KqV3jkGcHcY3e6UlM7uO6YekVhHcwptwd0WzWuhy3R7obzr0v52yZfwXEX
      4S8jkMoMxw49TeUQLckrHYxuk/vlQBidGLljSC5MvTlJBrppYZk9HmmMF+xwJmNKUsF5F5HI
      Kka3yeWwZb5YIldVOo0KjW4fTa392AX0SGOmfog5nqB+FVfF5y3rQ4LtWM/PRCA+75nNF2S5
      hDGyMPUusiRx3kV4wYpCKjEcu+gdleR6JDpnuFafR57iT32ahkmv8/2+4+zjhud5XO8ZnV6f
      8WhAnlyJ9jeskYki5fjTOdWOjtFt4M/e2Z1i6s0Ok4lDVYFoFVJr9dBadbIkZr090DdHSHmC
      780431MMXaeQSwwHBrIkfesCyu4X/NWOoe1Q//opd9lHHOICyzJ/L1SXwwbPX5KjYNoO/W4L
      SZI4rAP8cANKBdud8NaqczvuOCQy9uCNzyRm4a/omiM6P2zLJfGZ2WzOPX3Q7ZuMhwbpT+Oo
      m2hqCd+bcrx+oLbfcB2LslywDELavT6tRpU0vrA53TAHAx7ZHW865ZrmmH2dXK5i9Xs/dgEV
      j0/CZUC5+YahPefBZxoTBGv0oYX6dUdFnn3gvU85xQlNrccv16YkS2QfV97fZ9zTHE0fMB4N
      IE8JVxH6wKJWllgvA1Kpxmho8O0ltcgJ5lM2+wuVeotf/0yoliBcLND6NmpVYR+FXDIJ2x5w
      WocsVhskpYrtuGjtBpfjhmsiY/Z7yFJBOJ/RNh0aZZl14LHaHmi9GVT4RB+51ErSj11A1+OG
      7TXDHg4pfT0A23BOprQwjS7S1xHQ/WrBItqilOvYkwmaWqN45KwWc6L9iUq9ieM6NGtldtGS
      R1XD0FTu5wPh+jnHa383qBYF19OOmR+QFwoDa8yg1+a8jYipM9Q7JPGF5XKLYVlUioSZ5xEn
      OV3DfK5rj4TpPMKeOFRkuB13nD8VhrrG/XJk5vnkSoVeW6Xc7KJ3mtxut9cIgFckyuD+J8rg
      RBncn0QZ3JMogxMEQXhhIgAEQRBelAgAQRCEFyUCQBAE4UWJABAEQXhRIgAEQRBelAgAQRCE
      F/UfTYRz1C0Z4OEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Equally' width='384'>
      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
      hBAGJQEghBAGJQEghBAGJQEghBAGJQEghBAGJQEghBAGJQEghBAGJQEghBAGJQEghBAGJQEg
      hBAGJQEghBAGJQEghBAGJQEghBAGJQEghBAGJQEghBAGdUYEgK7raJqGruu/tCCapp2eSgkh
      xDnO3NwV8NVWMO/jOewsKiM6OZOhl15ETIT9Z5c9sHEZ7y7azw03jG7+igshxFmuWXsAuh5g
      3usvMW/FTlq3bcXubz/jpTc/xa/9tCcQqD7E08//m8Ur1iF9ACGE+PWaNQD8VSWs2LCL4WPH
      MejCwUwcfzk7vv+W4sq6RsvpoQCzX36egDkS5RdGiYQQQpyYZg0Ad00Vbr9KSnwcAAlJKVhD
      Abxe/zFL6Wz4+iO+3BXiuvEXoSjK0Wd0nUAg0OhfMBg8zVshhBBnp2YdSlcUUG0WzFZL48eP
      +X/Vwa28/ObHjLnmPmJtu0HR0TUdVAVN09i7d2+j1+q6TmJiYpPXXQghznbNGgBmsw1TKITX
      UwdEEAwG0BVAPRoBy76ax/5aE6sWvMvymhI0TzHPPP82v7/xCswmEzk5OY3K9Hq9BAKB07sh
      QghxFmrWAAiLcBEZBhu37qAwK4ZNG9ehREQTFeGgurwU3eKkVZd+XBfXGgD3wU2s3VpD28Lc
      Rr0EIYQQJ695ewDOGAYPOJ+XZs9g9/oFFG3fQ9/LpxLtUHjtqcfw5VzKtWN6k55bv3zZRguv
      f1VG3z6dMDVnxYUQ4hzQzNPpVToPGE50ai77y2qIGjKa1vk5qIrCgCsmEQxLbHSkH5Helj/e
      lorluOUJIYQ4Uc1+PZVispDTpgM5P3q8RW6rnyxrDY+hY2HM6amYEEKc486IW0EIIYQ4/SQA
      hBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQA
      hBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQA
      hBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQA
      hBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoCQAhBDCoH5VAOi6TigU
      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
      OZc0Z4hHXvqM4spLSIt1AOCtqcaZ0pYpV15GTJgVW8V2/u+jHQQBS3NWXgghznLNGgCe2mo8
      QRPJsbEAxMUnYdWC+Hx+oD4AIlJb8+ADrQHweypZ+M1qslp1xwLouo7P52tUpt/vR1GU07kZ
      QghxVmrWAFDQUa1mTFbzjx7/qbrqYmb960nWlTi555YhAGiaxqFDhxotp2ka8fHxTVVlIYQ4
      ZzRrAFisdkyhEHVuDxBBIOBHUxQUtfGpiZrDu3juiSfZTSJ/vO8GsuPDATCZTGRmZjZa1uv1
      EggETtMWCCHE2atZTwLbI6KIcSqs3biFQDDAuu/XYIqMJcoVRtmhA5RU1BDwlPL8o09SpCRy
      +01Xk+QyU1Prac5qCyHEOaFZewBmRxQXX3QBL856nR1r5lNWVMrgK68nKkzh1SeexpszhPOT
      y/lu70Fs4X6ee+L/6l8XnsdfHrxBTgILIcSv0MzXAai0630Jd7doyaGKWlwx8WRntEBVFC6+
      6no0WwwR5gAPPFjQaNqnYnFiarY6CyHEuaHZLwRTTGZa5LSkxY8eT2yR1fD//Oi401spIYQw
      gDPiVhBCCCFOPwkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkA
      IYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkA
      IYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkA
      IYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkAIYQwKAkA
      IYQwKAkAIYQwKAkAIYQwqDMmALzuanZs3cyWrTup8fjQj7OcFvSxZfNOtNNaOyGEOPeYm7sC
      AL7qYl54+km2FtdhCrpxZXbmzpunEOWwNlouFPDy5UczePmTA7zy7wewHqc8IYQQv+yM6AFs
      W7uUrSUqf3jgIR5+4A94d65m6cZ9jXoBmrecl57+G69+sBgUpdnqKoQQ54ozIAA09mzeQEJG
      O1JjnIQnZtOtIIEt6/c0DgBfNV5HJjdNuBQZ/xFCiF/vDBgC0vH5fIQnxWNWAFTsDhsEQ42W
      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
      yGrBg6WRMsUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Weekend' width='384'>
      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
      DZUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='288' name='Sheet 4' width='348'>
      iVBORw0KGgoAAAANSUhEUgAAAVwAAAEgCAYAAAD49suWAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAI4klEQVR4nO3cP2ic9x3H8W9KzkMvQ7yoUHmoFtlgLcpQLfJQDZGGukM6xKV4COqQIQ0U
      FYw7FBICrocQagfqmIYMqcAt2AVbQy6DOlhDlSEaKoF9HdTBWrTIQ65DblCHO/2z5KSl9Ufk
      +nqB0KPnfj/p0fLmx++e557b3t7eLgCeuW8d9wUA/L8QXIAQwQUIEVyAEMEFCBFcgBDBBQgR
      XIAQwQUIEVyAEMEFCBFcgBDBBQgRXIAQwQUIEVyAEMEFCBFcgBDBBQgRXIAQwQUIEVyAEMEF
      CBFcgBDBBQgRXIAQwQUIEVyAEMEFCBFcgBDBBQgRXIAQwQUIEVyAEMEFCBFcgBDBBQgRXIAQ
      wQUIEVyAEMEFCBFcgBDBBQgRXIAQwQUIEVyAEMEFCBFcgBDBBQgRXIAQwQUIEVyAEMEFCBFc
      gBDBBQgRXIAQwQUIEVyAEMEFCBFcgBDBBQgRXIAQwQUIEVyAEMEFCBFcgBDBBQgRXIAQwQUI
      EVyAEMEFCBFcgBDBBQgRXIAQwQUIEVyAEMEFCBFcgBDBBQgRXIAQwQUIEVyAEMEFCBFcgBDB
      BQgRXIAQwQUIEVyAEMEFCBFcgBDBBQgRXIAQwQUIEVyAEMEFCHn+uC+A/60HDx4c9yUATyG4
      A+jMmTPHfQnAEWwpAIQILkCI4AKECC5AiOAChAguQIjgAoQILkCI4AKECC5AiOAChAguQIjg
      AoQILkCI4AKECC5AiOAChAguQIjgAoQILkCI4AKECC5AiOAChAguQIjgAoQILkCI4AKECC5A
      iOAChAguQIjgAoQILkCI4AKECC5AiOAChAguQIjgAoQILkCI4AKECC5AiOAChAguQIjgAoQI
      LkCI4AKECC5AiOAChAguQIjgAoQILkCI4AKECC5AiOAChAguQIjgAoQILkCI4AKECC5AiOAC
      hAguQIjgAoQILkCI4AKECC5AiOAChAguQIjgAoQILkCI4AKECC5AiOAChAguQIjgAoQILkCI
      4AKECC5AiOAChAguQIjgAoQILkCI4AKECC5AiOAChAguQIjgAoQILkCI4AKECC5AyPPHfQEA
      z1Rno1ZWH1VVVePUWI0NN48cttlerfWtTp08NVajTxnz3xJcYKCt3LpSV1qbvR+ak3Xzozfr
      xUOjHtfHb71dy92qxvjrNX956plciy0FYIBt1CeLm3s/dpbq3mrnyJHffqH3/YUTjWd2NYIL
      DKzOyt1a6R48t3h76XgupgQXGGCLdz/rHZw8Wz8YH6qqqs7avbp/9CK3p3Giqqo2N9ar3W7X
      +sZmdb9i+J7u7pz2+kYd9Sfs4QKDqbNcrbVe9pqjM/WzV9r1l5V7VbVZCwvtOvfq6JHTvvjH
      Yl25dKNW1vclszFU07NzNTs1csSMbt3/47X6w+3l2jpwvlFnp2frl7NTtfMWnBUuMJDWWwu1
      s3s7Of1SNUamarxfvvW7t2vjKfO6j1Z2Y9vY2c7tblbrxqV6d/HwrPvvvlHX98W2sTep1lo3
      6o13F3fHCi4wgB7XvdbD3mFzombGGlU1XOcnT/XOdVfq7spX7Cs0x2vu/fman/9TXf359O4K
      dfnG72t937DOyod1fbmf2sZIvf7OzZqfn6/59+fqbH9SZ/nO7haG4AIDp7veqp0OnpqaruH+
      +bHze/FcutN6yuyhmnv/ck0M9VaqI+dm652LZ/uvrdUn+0K9er+/R1zNuvje1Zoa7d1w1hia
      qF9dPt9/bbM++/xxVQkuMID+emex/0ZXoyYnT1d1u9XtdquGJur7J3tjug9btfj48Nzm+Cs1
      8cRzD8NTMzXUP/775+3+UadW272qN0Zmambo4JzG6IV67+p7dfOj+Zo71wuxN82AAbNaCzvL
      2+rWrUs/rVtHjtuqhdsrNTU7fuDsieYRT5k1T9fZk1WbW1Wdx1/s/u5O//aFF4a/V4fv3m3U
      8MjwgTNWuMBA2VxsHdhn/SqPFu8eGtt4ynMPO7eGfbl/7H92aVa4wCDpVGthuX88VBd/fble
      an55IJInmlXLv/tN3Vrbququ1Z37mzV37sTu691/flmHdP5Wazt7wiPf2Rvb//7FxkZ168kA
      P657135bn22dqNFzF+ri1IgVLjBANpdqsfc5NdU4PV3nx4ZreGSkRvZ9DQ+N1PmfTO5OWf5z
      68CDDVvLn9bqE7+2vfDp7m1f393dJnixxkZ7G8Ld9Vbtf4K4qqo2FuvjpbV6uLZS7f5eseAC
      A2P1Xmv3Ca+JH5576rjG6HRN7mzVPlqsTw7cXvuw3n7jWu0899BuXau3bvdvMWtM1I/G9/Z4
      z53fCfdWfXjprbq/0ZvU2ViuK2/v7BwP1cv9ByZsKQADYr3u7Sxv63TNTBz+TLA9QzUzc7qW
      bj+sqk4t3F6us/tf3lyqS689+ZkLjTp/ebb2vw3WGL1Yr08s1Y3lrarOWl3/xWt1/YlZJydf
      rf5NCla4wIDYWK12f2/g5OTLdfSDu3tGp1/evdVra22tGv2F6/iPL9T4yScGN0/X7NWbdXHs
      cMSn5j6oyxcm6vC9Dc2auHC5Pnhzb6X93Pb29va/99/wTfDgwYM6c+bMcV8GfMN1a6O9Xp2q
      ajRfrJHhoa+dUdWpjXb/Q2sazRoeGT4UYVsKAIc0anj069bIT2p+7RxbCgAhggsQIrgAIYIL
      ECK4ACGCCxAiuAAhggsQIrgAIYILECK4ACGCCxAiuAAhggsQIrgAIYILECK4ACGCCxAiuAAh
      ggsQIrgAIYILECK4ACGCCxAiuAAhggsQIrgAIYILECK4ACGCCxAiuAAhggsQIrgAIYILECK4
      ACGCCxAiuAAhggsQIrgAIYILECK4ACGCCxAiuAAhggsQIrgAIYILECK4ACGCCxAiuAAhggsQ
      IrgAIYILECK4ACGCCxAiuAAhggsQIrgAIYILECK4ACGCCxAiuAAhggsQIrgAIYILECK4ACGC
      CxAiuAAhggsQIrgAIYILECK4ACGCCxAiuAAhggsQIrgAIYILECK4ACGCCxAiuAAhggsQIrgA
      IYILECK4ACH/AgKPhZI2hWx6AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
